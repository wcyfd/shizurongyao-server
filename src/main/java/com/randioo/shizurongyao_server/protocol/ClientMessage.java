// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClientMessage.proto

package com.randioo.shizurongyao_server.protocol;

public final class ClientMessage {
  private ClientMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class CSMessage extends
      com.google.protobuf.GeneratedMessage {
    // Use CSMessage.newBuilder() to construct.
    private CSMessage() {
      initFields();
    }
    private CSMessage(boolean noInit) {}
    
    private static final CSMessage defaultInstance;
    public static CSMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public CSMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.shizurongyao_server.protocol.ClientMessage.internal_static_com_randioo_shizurongyao_server_protocol_CSMessage_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.shizurongyao_server.protocol.ClientMessage.internal_static_com_randioo_shizurongyao_server_protocol_CSMessage_fieldAccessorTable;
    }
    
    // optional .com.randioo.shizurongyao_server.protocol.LoginCheckAccountRequest LoginCheckAccountRequest = 1;
    public static final int LOGINCHECKACCOUNTREQUEST_FIELD_NUMBER = 1;
    private boolean hasLoginCheckAccountRequest;
    private com.randioo.shizurongyao_server.protocol.Login.LoginCheckAccountRequest loginCheckAccountRequest_;
    public boolean hasLoginCheckAccountRequest() { return hasLoginCheckAccountRequest; }
    public com.randioo.shizurongyao_server.protocol.Login.LoginCheckAccountRequest getLoginCheckAccountRequest() { return loginCheckAccountRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.LoginCreateRoleRequest LoginCreateRoleRequest = 2;
    public static final int LOGINCREATEROLEREQUEST_FIELD_NUMBER = 2;
    private boolean hasLoginCreateRoleRequest;
    private com.randioo.shizurongyao_server.protocol.Login.LoginCreateRoleRequest loginCreateRoleRequest_;
    public boolean hasLoginCreateRoleRequest() { return hasLoginCreateRoleRequest; }
    public com.randioo.shizurongyao_server.protocol.Login.LoginCreateRoleRequest getLoginCreateRoleRequest() { return loginCreateRoleRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.LoginGetRoleDataRequest LoginGetRoleDataRequest = 3;
    public static final int LOGINGETROLEDATAREQUEST_FIELD_NUMBER = 3;
    private boolean hasLoginGetRoleDataRequest;
    private com.randioo.shizurongyao_server.protocol.Login.LoginGetRoleDataRequest loginGetRoleDataRequest_;
    public boolean hasLoginGetRoleDataRequest() { return hasLoginGetRoleDataRequest; }
    public com.randioo.shizurongyao_server.protocol.Login.LoginGetRoleDataRequest getLoginGetRoleDataRequest() { return loginGetRoleDataRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.FightClientReadyRequest FightClientReadyRequest = 4;
    public static final int FIGHTCLIENTREADYREQUEST_FIELD_NUMBER = 4;
    private boolean hasFightClientReadyRequest;
    private com.randioo.shizurongyao_server.protocol.Fight.FightClientReadyRequest fightClientReadyRequest_;
    public boolean hasFightClientReadyRequest() { return hasFightClientReadyRequest; }
    public com.randioo.shizurongyao_server.protocol.Fight.FightClientReadyRequest getFightClientReadyRequest() { return fightClientReadyRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.FightGameActionRequest FightGameActionRequest = 5;
    public static final int FIGHTGAMEACTIONREQUEST_FIELD_NUMBER = 5;
    private boolean hasFightGameActionRequest;
    private com.randioo.shizurongyao_server.protocol.Fight.FightGameActionRequest fightGameActionRequest_;
    public boolean hasFightGameActionRequest() { return hasFightGameActionRequest; }
    public com.randioo.shizurongyao_server.protocol.Fight.FightGameActionRequest getFightGameActionRequest() { return fightGameActionRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.FightGameOverRequest FightGameOverRequest = 6;
    public static final int FIGHTGAMEOVERREQUEST_FIELD_NUMBER = 6;
    private boolean hasFightGameOverRequest;
    private com.randioo.shizurongyao_server.protocol.Fight.FightGameOverRequest fightGameOverRequest_;
    public boolean hasFightGameOverRequest() { return hasFightGameOverRequest; }
    public com.randioo.shizurongyao_server.protocol.Fight.FightGameOverRequest getFightGameOverRequest() { return fightGameOverRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.FightGetGameAwardRequest FightGetGameAwardRequest = 7;
    public static final int FIGHTGETGAMEAWARDREQUEST_FIELD_NUMBER = 7;
    private boolean hasFightGetGameAwardRequest;
    private com.randioo.shizurongyao_server.protocol.Fight.FightGetGameAwardRequest fightGetGameAwardRequest_;
    public boolean hasFightGetGameAwardRequest() { return hasFightGetGameAwardRequest; }
    public com.randioo.shizurongyao_server.protocol.Fight.FightGetGameAwardRequest getFightGetGameAwardRequest() { return fightGetGameAwardRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.FightCountDownRequest FightCountDownRequest = 8;
    public static final int FIGHTCOUNTDOWNREQUEST_FIELD_NUMBER = 8;
    private boolean hasFightCountDownRequest;
    private com.randioo.shizurongyao_server.protocol.Fight.FightCountDownRequest fightCountDownRequest_;
    public boolean hasFightCountDownRequest() { return hasFightCountDownRequest; }
    public com.randioo.shizurongyao_server.protocol.Fight.FightCountDownRequest getFightCountDownRequest() { return fightCountDownRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.FightLoadResourceProgressRequest FightLoadResourceProgressRequest = 9;
    public static final int FIGHTLOADRESOURCEPROGRESSREQUEST_FIELD_NUMBER = 9;
    private boolean hasFightLoadResourceProgressRequest;
    private com.randioo.shizurongyao_server.protocol.Fight.FightLoadResourceProgressRequest fightLoadResourceProgressRequest_;
    public boolean hasFightLoadResourceProgressRequest() { return hasFightLoadResourceProgressRequest; }
    public com.randioo.shizurongyao_server.protocol.Fight.FightLoadResourceProgressRequest getFightLoadResourceProgressRequest() { return fightLoadResourceProgressRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.PillageRoleRequest PillageRoleRequest = 10;
    public static final int PILLAGEROLEREQUEST_FIELD_NUMBER = 10;
    private boolean hasPillageRoleRequest;
    private com.randioo.shizurongyao_server.protocol.Pillage.PillageRoleRequest pillageRoleRequest_;
    public boolean hasPillageRoleRequest() { return hasPillageRoleRequest; }
    public com.randioo.shizurongyao_server.protocol.Pillage.PillageRoleRequest getPillageRoleRequest() { return pillageRoleRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.PillageCancelRequest PillageCancelRequest = 11;
    public static final int PILLAGECANCELREQUEST_FIELD_NUMBER = 11;
    private boolean hasPillageCancelRequest;
    private com.randioo.shizurongyao_server.protocol.Pillage.PillageCancelRequest pillageCancelRequest_;
    public boolean hasPillageCancelRequest() { return hasPillageCancelRequest; }
    public com.randioo.shizurongyao_server.protocol.Pillage.PillageCancelRequest getPillageCancelRequest() { return pillageCancelRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.PillageShowRequest PillageShowRequest = 12;
    public static final int PILLAGESHOWREQUEST_FIELD_NUMBER = 12;
    private boolean hasPillageShowRequest;
    private com.randioo.shizurongyao_server.protocol.Pillage.PillageShowRequest pillageShowRequest_;
    public boolean hasPillageShowRequest() { return hasPillageShowRequest; }
    public com.randioo.shizurongyao_server.protocol.Pillage.PillageShowRequest getPillageShowRequest() { return pillageShowRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.PillageCompetitionNoticeRequest PillageCompetitionNoticeRequest = 13;
    public static final int PILLAGECOMPETITIONNOTICEREQUEST_FIELD_NUMBER = 13;
    private boolean hasPillageCompetitionNoticeRequest;
    private com.randioo.shizurongyao_server.protocol.Pillage.PillageCompetitionNoticeRequest pillageCompetitionNoticeRequest_;
    public boolean hasPillageCompetitionNoticeRequest() { return hasPillageCompetitionNoticeRequest; }
    public com.randioo.shizurongyao_server.protocol.Pillage.PillageCompetitionNoticeRequest getPillageCompetitionNoticeRequest() { return pillageCompetitionNoticeRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.PillagePracticeRequest PillagePracticeRequest = 14;
    public static final int PILLAGEPRACTICEREQUEST_FIELD_NUMBER = 14;
    private boolean hasPillagePracticeRequest;
    private com.randioo.shizurongyao_server.protocol.Pillage.PillagePracticeRequest pillagePracticeRequest_;
    public boolean hasPillagePracticeRequest() { return hasPillagePracticeRequest; }
    public com.randioo.shizurongyao_server.protocol.Pillage.PillagePracticeRequest getPillagePracticeRequest() { return pillagePracticeRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.CardGetCardsInfoRequest CardGetCardsInfoRequest = 15;
    public static final int CARDGETCARDSINFOREQUEST_FIELD_NUMBER = 15;
    private boolean hasCardGetCardsInfoRequest;
    private com.randioo.shizurongyao_server.protocol.Card.CardGetCardsInfoRequest cardGetCardsInfoRequest_;
    public boolean hasCardGetCardsInfoRequest() { return hasCardGetCardsInfoRequest; }
    public com.randioo.shizurongyao_server.protocol.Card.CardGetCardsInfoRequest getCardGetCardsInfoRequest() { return cardGetCardsInfoRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.CardEditCardListRequest CardEditCardListRequest = 16;
    public static final int CARDEDITCARDLISTREQUEST_FIELD_NUMBER = 16;
    private boolean hasCardEditCardListRequest;
    private com.randioo.shizurongyao_server.protocol.Card.CardEditCardListRequest cardEditCardListRequest_;
    public boolean hasCardEditCardListRequest() { return hasCardEditCardListRequest; }
    public com.randioo.shizurongyao_server.protocol.Card.CardEditCardListRequest getCardEditCardListRequest() { return cardEditCardListRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.CardLvUpRequest CardLvUpRequest = 17;
    public static final int CARDLVUPREQUEST_FIELD_NUMBER = 17;
    private boolean hasCardLvUpRequest;
    private com.randioo.shizurongyao_server.protocol.Card.CardLvUpRequest cardLvUpRequest_;
    public boolean hasCardLvUpRequest() { return hasCardLvUpRequest; }
    public com.randioo.shizurongyao_server.protocol.Card.CardLvUpRequest getCardLvUpRequest() { return cardLvUpRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.CardChooseUseCardListRequest CardChooseUseCardListRequest = 18;
    public static final int CARDCHOOSEUSECARDLISTREQUEST_FIELD_NUMBER = 18;
    private boolean hasCardChooseUseCardListRequest;
    private com.randioo.shizurongyao_server.protocol.Card.CardChooseUseCardListRequest cardChooseUseCardListRequest_;
    public boolean hasCardChooseUseCardListRequest() { return hasCardChooseUseCardListRequest; }
    public com.randioo.shizurongyao_server.protocol.Card.CardChooseUseCardListRequest getCardChooseUseCardListRequest() { return cardChooseUseCardListRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.CardChangeMainCardRequest CardChangeMainCardRequest = 19;
    public static final int CARDCHANGEMAINCARDREQUEST_FIELD_NUMBER = 19;
    private boolean hasCardChangeMainCardRequest;
    private com.randioo.shizurongyao_server.protocol.Card.CardChangeMainCardRequest cardChangeMainCardRequest_;
    public boolean hasCardChangeMainCardRequest() { return hasCardChangeMainCardRequest; }
    public com.randioo.shizurongyao_server.protocol.Card.CardChangeMainCardRequest getCardChangeMainCardRequest() { return cardChangeMainCardRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.PingRequest PingRequest = 20;
    public static final int PINGREQUEST_FIELD_NUMBER = 20;
    private boolean hasPingRequest;
    private com.randioo.shizurongyao_server.protocol.Ping.PingRequest pingRequest_;
    public boolean hasPingRequest() { return hasPingRequest; }
    public com.randioo.shizurongyao_server.protocol.Ping.PingRequest getPingRequest() { return pingRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.MarketBuyMarketItemRequest MarketBuyMarketItemRequest = 21;
    public static final int MARKETBUYMARKETITEMREQUEST_FIELD_NUMBER = 21;
    private boolean hasMarketBuyMarketItemRequest;
    private com.randioo.shizurongyao_server.protocol.Market.MarketBuyMarketItemRequest marketBuyMarketItemRequest_;
    public boolean hasMarketBuyMarketItemRequest() { return hasMarketBuyMarketItemRequest; }
    public com.randioo.shizurongyao_server.protocol.Market.MarketBuyMarketItemRequest getMarketBuyMarketItemRequest() { return marketBuyMarketItemRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.MarketArtificialRefreshRequest MarketArtificialRefreshRequest = 22;
    public static final int MARKETARTIFICIALREFRESHREQUEST_FIELD_NUMBER = 22;
    private boolean hasMarketArtificialRefreshRequest;
    private com.randioo.shizurongyao_server.protocol.Market.MarketArtificialRefreshRequest marketArtificialRefreshRequest_;
    public boolean hasMarketArtificialRefreshRequest() { return hasMarketArtificialRefreshRequest; }
    public com.randioo.shizurongyao_server.protocol.Market.MarketArtificialRefreshRequest getMarketArtificialRefreshRequest() { return marketArtificialRefreshRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.MarketShowRequest MarketShowRequest = 23;
    public static final int MARKETSHOWREQUEST_FIELD_NUMBER = 23;
    private boolean hasMarketShowRequest;
    private com.randioo.shizurongyao_server.protocol.Market.MarketShowRequest marketShowRequest_;
    public boolean hasMarketShowRequest() { return hasMarketShowRequest; }
    public com.randioo.shizurongyao_server.protocol.Market.MarketShowRequest getMarketShowRequest() { return marketShowRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.WarShowWarChapterRequest WarShowWarChapterRequest = 24;
    public static final int WARSHOWWARCHAPTERREQUEST_FIELD_NUMBER = 24;
    private boolean hasWarShowWarChapterRequest;
    private com.randioo.shizurongyao_server.protocol.War.WarShowWarChapterRequest warShowWarChapterRequest_;
    public boolean hasWarShowWarChapterRequest() { return hasWarShowWarChapterRequest; }
    public com.randioo.shizurongyao_server.protocol.War.WarShowWarChapterRequest getWarShowWarChapterRequest() { return warShowWarChapterRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.WarShowWarBuildRequest WarShowWarBuildRequest = 25;
    public static final int WARSHOWWARBUILDREQUEST_FIELD_NUMBER = 25;
    private boolean hasWarShowWarBuildRequest;
    private com.randioo.shizurongyao_server.protocol.War.WarShowWarBuildRequest warShowWarBuildRequest_;
    public boolean hasWarShowWarBuildRequest() { return hasWarShowWarBuildRequest; }
    public com.randioo.shizurongyao_server.protocol.War.WarShowWarBuildRequest getWarShowWarBuildRequest() { return warShowWarBuildRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.WarMarchRequest WarMarchRequest = 26;
    public static final int WARMARCHREQUEST_FIELD_NUMBER = 26;
    private boolean hasWarMarchRequest;
    private com.randioo.shizurongyao_server.protocol.War.WarMarchRequest warMarchRequest_;
    public boolean hasWarMarchRequest() { return hasWarMarchRequest; }
    public com.randioo.shizurongyao_server.protocol.War.WarMarchRequest getWarMarchRequest() { return warMarchRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.WarGetChapterAwardRequest WarGetChapterAwardRequest = 27;
    public static final int WARGETCHAPTERAWARDREQUEST_FIELD_NUMBER = 27;
    private boolean hasWarGetChapterAwardRequest;
    private com.randioo.shizurongyao_server.protocol.War.WarGetChapterAwardRequest warGetChapterAwardRequest_;
    public boolean hasWarGetChapterAwardRequest() { return hasWarGetChapterAwardRequest; }
    public com.randioo.shizurongyao_server.protocol.War.WarGetChapterAwardRequest getWarGetChapterAwardRequest() { return warGetChapterAwardRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.RoleInfoSelectRequest RoleInfoSelectRequest = 28;
    public static final int ROLEINFOSELECTREQUEST_FIELD_NUMBER = 28;
    private boolean hasRoleInfoSelectRequest;
    private com.randioo.shizurongyao_server.protocol.Role.RoleInfoSelectRequest roleInfoSelectRequest_;
    public boolean hasRoleInfoSelectRequest() { return hasRoleInfoSelectRequest; }
    public com.randioo.shizurongyao_server.protocol.Role.RoleInfoSelectRequest getRoleInfoSelectRequest() { return roleInfoSelectRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.RoleRenameRequest RoleRenameRequest = 29;
    public static final int ROLERENAMEREQUEST_FIELD_NUMBER = 29;
    private boolean hasRoleRenameRequest;
    private com.randioo.shizurongyao_server.protocol.Role.RoleRenameRequest roleRenameRequest_;
    public boolean hasRoleRenameRequest() { return hasRoleRenameRequest; }
    public com.randioo.shizurongyao_server.protocol.Role.RoleRenameRequest getRoleRenameRequest() { return roleRenameRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.ClanShowAllClanRequest ClanShowAllClanRequest = 30;
    public static final int CLANSHOWALLCLANREQUEST_FIELD_NUMBER = 30;
    private boolean hasClanShowAllClanRequest;
    private com.randioo.shizurongyao_server.protocol.Clan.ClanShowAllClanRequest clanShowAllClanRequest_;
    public boolean hasClanShowAllClanRequest() { return hasClanShowAllClanRequest; }
    public com.randioo.shizurongyao_server.protocol.Clan.ClanShowAllClanRequest getClanShowAllClanRequest() { return clanShowAllClanRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.GmCmdRequest GmCmdRequest = 31;
    public static final int GMCMDREQUEST_FIELD_NUMBER = 31;
    private boolean hasGmCmdRequest;
    private com.randioo.shizurongyao_server.protocol.Gm.GmCmdRequest gmCmdRequest_;
    public boolean hasGmCmdRequest() { return hasGmCmdRequest; }
    public com.randioo.shizurongyao_server.protocol.Gm.GmCmdRequest getGmCmdRequest() { return gmCmdRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.RankShowClanPointRankRequest RankShowClanPointRankRequest = 32;
    public static final int RANKSHOWCLANPOINTRANKREQUEST_FIELD_NUMBER = 32;
    private boolean hasRankShowClanPointRankRequest;
    private com.randioo.shizurongyao_server.protocol.Rank.RankShowClanPointRankRequest rankShowClanPointRankRequest_;
    public boolean hasRankShowClanPointRankRequest() { return hasRankShowClanPointRankRequest; }
    public com.randioo.shizurongyao_server.protocol.Rank.RankShowClanPointRankRequest getRankShowClanPointRankRequest() { return rankShowClanPointRankRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.GetRaceRoleNumRequest GetRaceRoleNumRequest = 33;
    public static final int GETRACEROLENUMREQUEST_FIELD_NUMBER = 33;
    private boolean hasGetRaceRoleNumRequest;
    private com.randioo.shizurongyao_server.protocol.Race.GetRaceRoleNumRequest getRaceRoleNumRequest_;
    public boolean hasGetRaceRoleNumRequest() { return hasGetRaceRoleNumRequest; }
    public com.randioo.shizurongyao_server.protocol.Race.GetRaceRoleNumRequest getGetRaceRoleNumRequest() { return getRaceRoleNumRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.RaceSignUpRequest RaceSignUpRequest = 34;
    public static final int RACESIGNUPREQUEST_FIELD_NUMBER = 34;
    private boolean hasRaceSignUpRequest;
    private com.randioo.shizurongyao_server.protocol.Race.RaceSignUpRequest raceSignUpRequest_;
    public boolean hasRaceSignUpRequest() { return hasRaceSignUpRequest; }
    public com.randioo.shizurongyao_server.protocol.Race.RaceSignUpRequest getRaceSignUpRequest() { return raceSignUpRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.RaceCancelSignUpRequest RaceCancelSignUpRequest = 35;
    public static final int RACECANCELSIGNUPREQUEST_FIELD_NUMBER = 35;
    private boolean hasRaceCancelSignUpRequest;
    private com.randioo.shizurongyao_server.protocol.Race.RaceCancelSignUpRequest raceCancelSignUpRequest_;
    public boolean hasRaceCancelSignUpRequest() { return hasRaceCancelSignUpRequest; }
    public com.randioo.shizurongyao_server.protocol.Race.RaceCancelSignUpRequest getRaceCancelSignUpRequest() { return raceCancelSignUpRequest_; }
    
    // optional .com.randioo.shizurongyao_server.protocol.RaceDescRequest RaceDescRequest = 36;
    public static final int RACEDESCREQUEST_FIELD_NUMBER = 36;
    private boolean hasRaceDescRequest;
    private com.randioo.shizurongyao_server.protocol.Race.RaceDescRequest raceDescRequest_;
    public boolean hasRaceDescRequest() { return hasRaceDescRequest; }
    public com.randioo.shizurongyao_server.protocol.Race.RaceDescRequest getRaceDescRequest() { return raceDescRequest_; }
    
    private void initFields() {
      loginCheckAccountRequest_ = com.randioo.shizurongyao_server.protocol.Login.LoginCheckAccountRequest.getDefaultInstance();
      loginCreateRoleRequest_ = com.randioo.shizurongyao_server.protocol.Login.LoginCreateRoleRequest.getDefaultInstance();
      loginGetRoleDataRequest_ = com.randioo.shizurongyao_server.protocol.Login.LoginGetRoleDataRequest.getDefaultInstance();
      fightClientReadyRequest_ = com.randioo.shizurongyao_server.protocol.Fight.FightClientReadyRequest.getDefaultInstance();
      fightGameActionRequest_ = com.randioo.shizurongyao_server.protocol.Fight.FightGameActionRequest.getDefaultInstance();
      fightGameOverRequest_ = com.randioo.shizurongyao_server.protocol.Fight.FightGameOverRequest.getDefaultInstance();
      fightGetGameAwardRequest_ = com.randioo.shizurongyao_server.protocol.Fight.FightGetGameAwardRequest.getDefaultInstance();
      fightCountDownRequest_ = com.randioo.shizurongyao_server.protocol.Fight.FightCountDownRequest.getDefaultInstance();
      fightLoadResourceProgressRequest_ = com.randioo.shizurongyao_server.protocol.Fight.FightLoadResourceProgressRequest.getDefaultInstance();
      pillageRoleRequest_ = com.randioo.shizurongyao_server.protocol.Pillage.PillageRoleRequest.getDefaultInstance();
      pillageCancelRequest_ = com.randioo.shizurongyao_server.protocol.Pillage.PillageCancelRequest.getDefaultInstance();
      pillageShowRequest_ = com.randioo.shizurongyao_server.protocol.Pillage.PillageShowRequest.getDefaultInstance();
      pillageCompetitionNoticeRequest_ = com.randioo.shizurongyao_server.protocol.Pillage.PillageCompetitionNoticeRequest.getDefaultInstance();
      pillagePracticeRequest_ = com.randioo.shizurongyao_server.protocol.Pillage.PillagePracticeRequest.getDefaultInstance();
      cardGetCardsInfoRequest_ = com.randioo.shizurongyao_server.protocol.Card.CardGetCardsInfoRequest.getDefaultInstance();
      cardEditCardListRequest_ = com.randioo.shizurongyao_server.protocol.Card.CardEditCardListRequest.getDefaultInstance();
      cardLvUpRequest_ = com.randioo.shizurongyao_server.protocol.Card.CardLvUpRequest.getDefaultInstance();
      cardChooseUseCardListRequest_ = com.randioo.shizurongyao_server.protocol.Card.CardChooseUseCardListRequest.getDefaultInstance();
      cardChangeMainCardRequest_ = com.randioo.shizurongyao_server.protocol.Card.CardChangeMainCardRequest.getDefaultInstance();
      pingRequest_ = com.randioo.shizurongyao_server.protocol.Ping.PingRequest.getDefaultInstance();
      marketBuyMarketItemRequest_ = com.randioo.shizurongyao_server.protocol.Market.MarketBuyMarketItemRequest.getDefaultInstance();
      marketArtificialRefreshRequest_ = com.randioo.shizurongyao_server.protocol.Market.MarketArtificialRefreshRequest.getDefaultInstance();
      marketShowRequest_ = com.randioo.shizurongyao_server.protocol.Market.MarketShowRequest.getDefaultInstance();
      warShowWarChapterRequest_ = com.randioo.shizurongyao_server.protocol.War.WarShowWarChapterRequest.getDefaultInstance();
      warShowWarBuildRequest_ = com.randioo.shizurongyao_server.protocol.War.WarShowWarBuildRequest.getDefaultInstance();
      warMarchRequest_ = com.randioo.shizurongyao_server.protocol.War.WarMarchRequest.getDefaultInstance();
      warGetChapterAwardRequest_ = com.randioo.shizurongyao_server.protocol.War.WarGetChapterAwardRequest.getDefaultInstance();
      roleInfoSelectRequest_ = com.randioo.shizurongyao_server.protocol.Role.RoleInfoSelectRequest.getDefaultInstance();
      roleRenameRequest_ = com.randioo.shizurongyao_server.protocol.Role.RoleRenameRequest.getDefaultInstance();
      clanShowAllClanRequest_ = com.randioo.shizurongyao_server.protocol.Clan.ClanShowAllClanRequest.getDefaultInstance();
      gmCmdRequest_ = com.randioo.shizurongyao_server.protocol.Gm.GmCmdRequest.getDefaultInstance();
      rankShowClanPointRankRequest_ = com.randioo.shizurongyao_server.protocol.Rank.RankShowClanPointRankRequest.getDefaultInstance();
      getRaceRoleNumRequest_ = com.randioo.shizurongyao_server.protocol.Race.GetRaceRoleNumRequest.getDefaultInstance();
      raceSignUpRequest_ = com.randioo.shizurongyao_server.protocol.Race.RaceSignUpRequest.getDefaultInstance();
      raceCancelSignUpRequest_ = com.randioo.shizurongyao_server.protocol.Race.RaceCancelSignUpRequest.getDefaultInstance();
      raceDescRequest_ = com.randioo.shizurongyao_server.protocol.Race.RaceDescRequest.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasLoginCheckAccountRequest()) {
        output.writeMessage(1, getLoginCheckAccountRequest());
      }
      if (hasLoginCreateRoleRequest()) {
        output.writeMessage(2, getLoginCreateRoleRequest());
      }
      if (hasLoginGetRoleDataRequest()) {
        output.writeMessage(3, getLoginGetRoleDataRequest());
      }
      if (hasFightClientReadyRequest()) {
        output.writeMessage(4, getFightClientReadyRequest());
      }
      if (hasFightGameActionRequest()) {
        output.writeMessage(5, getFightGameActionRequest());
      }
      if (hasFightGameOverRequest()) {
        output.writeMessage(6, getFightGameOverRequest());
      }
      if (hasFightGetGameAwardRequest()) {
        output.writeMessage(7, getFightGetGameAwardRequest());
      }
      if (hasFightCountDownRequest()) {
        output.writeMessage(8, getFightCountDownRequest());
      }
      if (hasFightLoadResourceProgressRequest()) {
        output.writeMessage(9, getFightLoadResourceProgressRequest());
      }
      if (hasPillageRoleRequest()) {
        output.writeMessage(10, getPillageRoleRequest());
      }
      if (hasPillageCancelRequest()) {
        output.writeMessage(11, getPillageCancelRequest());
      }
      if (hasPillageShowRequest()) {
        output.writeMessage(12, getPillageShowRequest());
      }
      if (hasPillageCompetitionNoticeRequest()) {
        output.writeMessage(13, getPillageCompetitionNoticeRequest());
      }
      if (hasPillagePracticeRequest()) {
        output.writeMessage(14, getPillagePracticeRequest());
      }
      if (hasCardGetCardsInfoRequest()) {
        output.writeMessage(15, getCardGetCardsInfoRequest());
      }
      if (hasCardEditCardListRequest()) {
        output.writeMessage(16, getCardEditCardListRequest());
      }
      if (hasCardLvUpRequest()) {
        output.writeMessage(17, getCardLvUpRequest());
      }
      if (hasCardChooseUseCardListRequest()) {
        output.writeMessage(18, getCardChooseUseCardListRequest());
      }
      if (hasCardChangeMainCardRequest()) {
        output.writeMessage(19, getCardChangeMainCardRequest());
      }
      if (hasPingRequest()) {
        output.writeMessage(20, getPingRequest());
      }
      if (hasMarketBuyMarketItemRequest()) {
        output.writeMessage(21, getMarketBuyMarketItemRequest());
      }
      if (hasMarketArtificialRefreshRequest()) {
        output.writeMessage(22, getMarketArtificialRefreshRequest());
      }
      if (hasMarketShowRequest()) {
        output.writeMessage(23, getMarketShowRequest());
      }
      if (hasWarShowWarChapterRequest()) {
        output.writeMessage(24, getWarShowWarChapterRequest());
      }
      if (hasWarShowWarBuildRequest()) {
        output.writeMessage(25, getWarShowWarBuildRequest());
      }
      if (hasWarMarchRequest()) {
        output.writeMessage(26, getWarMarchRequest());
      }
      if (hasWarGetChapterAwardRequest()) {
        output.writeMessage(27, getWarGetChapterAwardRequest());
      }
      if (hasRoleInfoSelectRequest()) {
        output.writeMessage(28, getRoleInfoSelectRequest());
      }
      if (hasRoleRenameRequest()) {
        output.writeMessage(29, getRoleRenameRequest());
      }
      if (hasClanShowAllClanRequest()) {
        output.writeMessage(30, getClanShowAllClanRequest());
      }
      if (hasGmCmdRequest()) {
        output.writeMessage(31, getGmCmdRequest());
      }
      if (hasRankShowClanPointRankRequest()) {
        output.writeMessage(32, getRankShowClanPointRankRequest());
      }
      if (hasGetRaceRoleNumRequest()) {
        output.writeMessage(33, getGetRaceRoleNumRequest());
      }
      if (hasRaceSignUpRequest()) {
        output.writeMessage(34, getRaceSignUpRequest());
      }
      if (hasRaceCancelSignUpRequest()) {
        output.writeMessage(35, getRaceCancelSignUpRequest());
      }
      if (hasRaceDescRequest()) {
        output.writeMessage(36, getRaceDescRequest());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasLoginCheckAccountRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLoginCheckAccountRequest());
      }
      if (hasLoginCreateRoleRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLoginCreateRoleRequest());
      }
      if (hasLoginGetRoleDataRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLoginGetRoleDataRequest());
      }
      if (hasFightClientReadyRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getFightClientReadyRequest());
      }
      if (hasFightGameActionRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getFightGameActionRequest());
      }
      if (hasFightGameOverRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getFightGameOverRequest());
      }
      if (hasFightGetGameAwardRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getFightGetGameAwardRequest());
      }
      if (hasFightCountDownRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getFightCountDownRequest());
      }
      if (hasFightLoadResourceProgressRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getFightLoadResourceProgressRequest());
      }
      if (hasPillageRoleRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getPillageRoleRequest());
      }
      if (hasPillageCancelRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getPillageCancelRequest());
      }
      if (hasPillageShowRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getPillageShowRequest());
      }
      if (hasPillageCompetitionNoticeRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getPillageCompetitionNoticeRequest());
      }
      if (hasPillagePracticeRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getPillagePracticeRequest());
      }
      if (hasCardGetCardsInfoRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getCardGetCardsInfoRequest());
      }
      if (hasCardEditCardListRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getCardEditCardListRequest());
      }
      if (hasCardLvUpRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getCardLvUpRequest());
      }
      if (hasCardChooseUseCardListRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getCardChooseUseCardListRequest());
      }
      if (hasCardChangeMainCardRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, getCardChangeMainCardRequest());
      }
      if (hasPingRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getPingRequest());
      }
      if (hasMarketBuyMarketItemRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getMarketBuyMarketItemRequest());
      }
      if (hasMarketArtificialRefreshRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, getMarketArtificialRefreshRequest());
      }
      if (hasMarketShowRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, getMarketShowRequest());
      }
      if (hasWarShowWarChapterRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, getWarShowWarChapterRequest());
      }
      if (hasWarShowWarBuildRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, getWarShowWarBuildRequest());
      }
      if (hasWarMarchRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(26, getWarMarchRequest());
      }
      if (hasWarGetChapterAwardRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(27, getWarGetChapterAwardRequest());
      }
      if (hasRoleInfoSelectRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(28, getRoleInfoSelectRequest());
      }
      if (hasRoleRenameRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(29, getRoleRenameRequest());
      }
      if (hasClanShowAllClanRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(30, getClanShowAllClanRequest());
      }
      if (hasGmCmdRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(31, getGmCmdRequest());
      }
      if (hasRankShowClanPointRankRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, getRankShowClanPointRankRequest());
      }
      if (hasGetRaceRoleNumRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(33, getGetRaceRoleNumRequest());
      }
      if (hasRaceSignUpRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(34, getRaceSignUpRequest());
      }
      if (hasRaceCancelSignUpRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(35, getRaceCancelSignUpRequest());
      }
      if (hasRaceDescRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(36, getRaceDescRequest());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage result;
      
      // Construct using com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage();
        return builder;
      }
      
      protected com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage.getDescriptor();
      }
      
      public com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage getDefaultInstanceForType() {
        return com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage) {
          return mergeFrom((com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage other) {
        if (other == com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage.getDefaultInstance()) return this;
        if (other.hasLoginCheckAccountRequest()) {
          mergeLoginCheckAccountRequest(other.getLoginCheckAccountRequest());
        }
        if (other.hasLoginCreateRoleRequest()) {
          mergeLoginCreateRoleRequest(other.getLoginCreateRoleRequest());
        }
        if (other.hasLoginGetRoleDataRequest()) {
          mergeLoginGetRoleDataRequest(other.getLoginGetRoleDataRequest());
        }
        if (other.hasFightClientReadyRequest()) {
          mergeFightClientReadyRequest(other.getFightClientReadyRequest());
        }
        if (other.hasFightGameActionRequest()) {
          mergeFightGameActionRequest(other.getFightGameActionRequest());
        }
        if (other.hasFightGameOverRequest()) {
          mergeFightGameOverRequest(other.getFightGameOverRequest());
        }
        if (other.hasFightGetGameAwardRequest()) {
          mergeFightGetGameAwardRequest(other.getFightGetGameAwardRequest());
        }
        if (other.hasFightCountDownRequest()) {
          mergeFightCountDownRequest(other.getFightCountDownRequest());
        }
        if (other.hasFightLoadResourceProgressRequest()) {
          mergeFightLoadResourceProgressRequest(other.getFightLoadResourceProgressRequest());
        }
        if (other.hasPillageRoleRequest()) {
          mergePillageRoleRequest(other.getPillageRoleRequest());
        }
        if (other.hasPillageCancelRequest()) {
          mergePillageCancelRequest(other.getPillageCancelRequest());
        }
        if (other.hasPillageShowRequest()) {
          mergePillageShowRequest(other.getPillageShowRequest());
        }
        if (other.hasPillageCompetitionNoticeRequest()) {
          mergePillageCompetitionNoticeRequest(other.getPillageCompetitionNoticeRequest());
        }
        if (other.hasPillagePracticeRequest()) {
          mergePillagePracticeRequest(other.getPillagePracticeRequest());
        }
        if (other.hasCardGetCardsInfoRequest()) {
          mergeCardGetCardsInfoRequest(other.getCardGetCardsInfoRequest());
        }
        if (other.hasCardEditCardListRequest()) {
          mergeCardEditCardListRequest(other.getCardEditCardListRequest());
        }
        if (other.hasCardLvUpRequest()) {
          mergeCardLvUpRequest(other.getCardLvUpRequest());
        }
        if (other.hasCardChooseUseCardListRequest()) {
          mergeCardChooseUseCardListRequest(other.getCardChooseUseCardListRequest());
        }
        if (other.hasCardChangeMainCardRequest()) {
          mergeCardChangeMainCardRequest(other.getCardChangeMainCardRequest());
        }
        if (other.hasPingRequest()) {
          mergePingRequest(other.getPingRequest());
        }
        if (other.hasMarketBuyMarketItemRequest()) {
          mergeMarketBuyMarketItemRequest(other.getMarketBuyMarketItemRequest());
        }
        if (other.hasMarketArtificialRefreshRequest()) {
          mergeMarketArtificialRefreshRequest(other.getMarketArtificialRefreshRequest());
        }
        if (other.hasMarketShowRequest()) {
          mergeMarketShowRequest(other.getMarketShowRequest());
        }
        if (other.hasWarShowWarChapterRequest()) {
          mergeWarShowWarChapterRequest(other.getWarShowWarChapterRequest());
        }
        if (other.hasWarShowWarBuildRequest()) {
          mergeWarShowWarBuildRequest(other.getWarShowWarBuildRequest());
        }
        if (other.hasWarMarchRequest()) {
          mergeWarMarchRequest(other.getWarMarchRequest());
        }
        if (other.hasWarGetChapterAwardRequest()) {
          mergeWarGetChapterAwardRequest(other.getWarGetChapterAwardRequest());
        }
        if (other.hasRoleInfoSelectRequest()) {
          mergeRoleInfoSelectRequest(other.getRoleInfoSelectRequest());
        }
        if (other.hasRoleRenameRequest()) {
          mergeRoleRenameRequest(other.getRoleRenameRequest());
        }
        if (other.hasClanShowAllClanRequest()) {
          mergeClanShowAllClanRequest(other.getClanShowAllClanRequest());
        }
        if (other.hasGmCmdRequest()) {
          mergeGmCmdRequest(other.getGmCmdRequest());
        }
        if (other.hasRankShowClanPointRankRequest()) {
          mergeRankShowClanPointRankRequest(other.getRankShowClanPointRankRequest());
        }
        if (other.hasGetRaceRoleNumRequest()) {
          mergeGetRaceRoleNumRequest(other.getGetRaceRoleNumRequest());
        }
        if (other.hasRaceSignUpRequest()) {
          mergeRaceSignUpRequest(other.getRaceSignUpRequest());
        }
        if (other.hasRaceCancelSignUpRequest()) {
          mergeRaceCancelSignUpRequest(other.getRaceCancelSignUpRequest());
        }
        if (other.hasRaceDescRequest()) {
          mergeRaceDescRequest(other.getRaceDescRequest());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.randioo.shizurongyao_server.protocol.Login.LoginCheckAccountRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Login.LoginCheckAccountRequest.newBuilder();
              if (hasLoginCheckAccountRequest()) {
                subBuilder.mergeFrom(getLoginCheckAccountRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLoginCheckAccountRequest(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.randioo.shizurongyao_server.protocol.Login.LoginCreateRoleRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Login.LoginCreateRoleRequest.newBuilder();
              if (hasLoginCreateRoleRequest()) {
                subBuilder.mergeFrom(getLoginCreateRoleRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLoginCreateRoleRequest(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.randioo.shizurongyao_server.protocol.Login.LoginGetRoleDataRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Login.LoginGetRoleDataRequest.newBuilder();
              if (hasLoginGetRoleDataRequest()) {
                subBuilder.mergeFrom(getLoginGetRoleDataRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLoginGetRoleDataRequest(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.randioo.shizurongyao_server.protocol.Fight.FightClientReadyRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Fight.FightClientReadyRequest.newBuilder();
              if (hasFightClientReadyRequest()) {
                subBuilder.mergeFrom(getFightClientReadyRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightClientReadyRequest(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.randioo.shizurongyao_server.protocol.Fight.FightGameActionRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Fight.FightGameActionRequest.newBuilder();
              if (hasFightGameActionRequest()) {
                subBuilder.mergeFrom(getFightGameActionRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightGameActionRequest(subBuilder.buildPartial());
              break;
            }
            case 50: {
              com.randioo.shizurongyao_server.protocol.Fight.FightGameOverRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Fight.FightGameOverRequest.newBuilder();
              if (hasFightGameOverRequest()) {
                subBuilder.mergeFrom(getFightGameOverRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightGameOverRequest(subBuilder.buildPartial());
              break;
            }
            case 58: {
              com.randioo.shizurongyao_server.protocol.Fight.FightGetGameAwardRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Fight.FightGetGameAwardRequest.newBuilder();
              if (hasFightGetGameAwardRequest()) {
                subBuilder.mergeFrom(getFightGetGameAwardRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightGetGameAwardRequest(subBuilder.buildPartial());
              break;
            }
            case 66: {
              com.randioo.shizurongyao_server.protocol.Fight.FightCountDownRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Fight.FightCountDownRequest.newBuilder();
              if (hasFightCountDownRequest()) {
                subBuilder.mergeFrom(getFightCountDownRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightCountDownRequest(subBuilder.buildPartial());
              break;
            }
            case 74: {
              com.randioo.shizurongyao_server.protocol.Fight.FightLoadResourceProgressRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Fight.FightLoadResourceProgressRequest.newBuilder();
              if (hasFightLoadResourceProgressRequest()) {
                subBuilder.mergeFrom(getFightLoadResourceProgressRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightLoadResourceProgressRequest(subBuilder.buildPartial());
              break;
            }
            case 82: {
              com.randioo.shizurongyao_server.protocol.Pillage.PillageRoleRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Pillage.PillageRoleRequest.newBuilder();
              if (hasPillageRoleRequest()) {
                subBuilder.mergeFrom(getPillageRoleRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPillageRoleRequest(subBuilder.buildPartial());
              break;
            }
            case 90: {
              com.randioo.shizurongyao_server.protocol.Pillage.PillageCancelRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Pillage.PillageCancelRequest.newBuilder();
              if (hasPillageCancelRequest()) {
                subBuilder.mergeFrom(getPillageCancelRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPillageCancelRequest(subBuilder.buildPartial());
              break;
            }
            case 98: {
              com.randioo.shizurongyao_server.protocol.Pillage.PillageShowRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Pillage.PillageShowRequest.newBuilder();
              if (hasPillageShowRequest()) {
                subBuilder.mergeFrom(getPillageShowRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPillageShowRequest(subBuilder.buildPartial());
              break;
            }
            case 106: {
              com.randioo.shizurongyao_server.protocol.Pillage.PillageCompetitionNoticeRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Pillage.PillageCompetitionNoticeRequest.newBuilder();
              if (hasPillageCompetitionNoticeRequest()) {
                subBuilder.mergeFrom(getPillageCompetitionNoticeRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPillageCompetitionNoticeRequest(subBuilder.buildPartial());
              break;
            }
            case 114: {
              com.randioo.shizurongyao_server.protocol.Pillage.PillagePracticeRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Pillage.PillagePracticeRequest.newBuilder();
              if (hasPillagePracticeRequest()) {
                subBuilder.mergeFrom(getPillagePracticeRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPillagePracticeRequest(subBuilder.buildPartial());
              break;
            }
            case 122: {
              com.randioo.shizurongyao_server.protocol.Card.CardGetCardsInfoRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Card.CardGetCardsInfoRequest.newBuilder();
              if (hasCardGetCardsInfoRequest()) {
                subBuilder.mergeFrom(getCardGetCardsInfoRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCardGetCardsInfoRequest(subBuilder.buildPartial());
              break;
            }
            case 130: {
              com.randioo.shizurongyao_server.protocol.Card.CardEditCardListRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Card.CardEditCardListRequest.newBuilder();
              if (hasCardEditCardListRequest()) {
                subBuilder.mergeFrom(getCardEditCardListRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCardEditCardListRequest(subBuilder.buildPartial());
              break;
            }
            case 138: {
              com.randioo.shizurongyao_server.protocol.Card.CardLvUpRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Card.CardLvUpRequest.newBuilder();
              if (hasCardLvUpRequest()) {
                subBuilder.mergeFrom(getCardLvUpRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCardLvUpRequest(subBuilder.buildPartial());
              break;
            }
            case 146: {
              com.randioo.shizurongyao_server.protocol.Card.CardChooseUseCardListRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Card.CardChooseUseCardListRequest.newBuilder();
              if (hasCardChooseUseCardListRequest()) {
                subBuilder.mergeFrom(getCardChooseUseCardListRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCardChooseUseCardListRequest(subBuilder.buildPartial());
              break;
            }
            case 154: {
              com.randioo.shizurongyao_server.protocol.Card.CardChangeMainCardRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Card.CardChangeMainCardRequest.newBuilder();
              if (hasCardChangeMainCardRequest()) {
                subBuilder.mergeFrom(getCardChangeMainCardRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCardChangeMainCardRequest(subBuilder.buildPartial());
              break;
            }
            case 162: {
              com.randioo.shizurongyao_server.protocol.Ping.PingRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Ping.PingRequest.newBuilder();
              if (hasPingRequest()) {
                subBuilder.mergeFrom(getPingRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPingRequest(subBuilder.buildPartial());
              break;
            }
            case 170: {
              com.randioo.shizurongyao_server.protocol.Market.MarketBuyMarketItemRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Market.MarketBuyMarketItemRequest.newBuilder();
              if (hasMarketBuyMarketItemRequest()) {
                subBuilder.mergeFrom(getMarketBuyMarketItemRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMarketBuyMarketItemRequest(subBuilder.buildPartial());
              break;
            }
            case 178: {
              com.randioo.shizurongyao_server.protocol.Market.MarketArtificialRefreshRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Market.MarketArtificialRefreshRequest.newBuilder();
              if (hasMarketArtificialRefreshRequest()) {
                subBuilder.mergeFrom(getMarketArtificialRefreshRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMarketArtificialRefreshRequest(subBuilder.buildPartial());
              break;
            }
            case 186: {
              com.randioo.shizurongyao_server.protocol.Market.MarketShowRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Market.MarketShowRequest.newBuilder();
              if (hasMarketShowRequest()) {
                subBuilder.mergeFrom(getMarketShowRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMarketShowRequest(subBuilder.buildPartial());
              break;
            }
            case 194: {
              com.randioo.shizurongyao_server.protocol.War.WarShowWarChapterRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.War.WarShowWarChapterRequest.newBuilder();
              if (hasWarShowWarChapterRequest()) {
                subBuilder.mergeFrom(getWarShowWarChapterRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setWarShowWarChapterRequest(subBuilder.buildPartial());
              break;
            }
            case 202: {
              com.randioo.shizurongyao_server.protocol.War.WarShowWarBuildRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.War.WarShowWarBuildRequest.newBuilder();
              if (hasWarShowWarBuildRequest()) {
                subBuilder.mergeFrom(getWarShowWarBuildRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setWarShowWarBuildRequest(subBuilder.buildPartial());
              break;
            }
            case 210: {
              com.randioo.shizurongyao_server.protocol.War.WarMarchRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.War.WarMarchRequest.newBuilder();
              if (hasWarMarchRequest()) {
                subBuilder.mergeFrom(getWarMarchRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setWarMarchRequest(subBuilder.buildPartial());
              break;
            }
            case 218: {
              com.randioo.shizurongyao_server.protocol.War.WarGetChapterAwardRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.War.WarGetChapterAwardRequest.newBuilder();
              if (hasWarGetChapterAwardRequest()) {
                subBuilder.mergeFrom(getWarGetChapterAwardRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setWarGetChapterAwardRequest(subBuilder.buildPartial());
              break;
            }
            case 226: {
              com.randioo.shizurongyao_server.protocol.Role.RoleInfoSelectRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Role.RoleInfoSelectRequest.newBuilder();
              if (hasRoleInfoSelectRequest()) {
                subBuilder.mergeFrom(getRoleInfoSelectRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRoleInfoSelectRequest(subBuilder.buildPartial());
              break;
            }
            case 234: {
              com.randioo.shizurongyao_server.protocol.Role.RoleRenameRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Role.RoleRenameRequest.newBuilder();
              if (hasRoleRenameRequest()) {
                subBuilder.mergeFrom(getRoleRenameRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRoleRenameRequest(subBuilder.buildPartial());
              break;
            }
            case 242: {
              com.randioo.shizurongyao_server.protocol.Clan.ClanShowAllClanRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Clan.ClanShowAllClanRequest.newBuilder();
              if (hasClanShowAllClanRequest()) {
                subBuilder.mergeFrom(getClanShowAllClanRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setClanShowAllClanRequest(subBuilder.buildPartial());
              break;
            }
            case 250: {
              com.randioo.shizurongyao_server.protocol.Gm.GmCmdRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Gm.GmCmdRequest.newBuilder();
              if (hasGmCmdRequest()) {
                subBuilder.mergeFrom(getGmCmdRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGmCmdRequest(subBuilder.buildPartial());
              break;
            }
            case 258: {
              com.randioo.shizurongyao_server.protocol.Rank.RankShowClanPointRankRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Rank.RankShowClanPointRankRequest.newBuilder();
              if (hasRankShowClanPointRankRequest()) {
                subBuilder.mergeFrom(getRankShowClanPointRankRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRankShowClanPointRankRequest(subBuilder.buildPartial());
              break;
            }
            case 266: {
              com.randioo.shizurongyao_server.protocol.Race.GetRaceRoleNumRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Race.GetRaceRoleNumRequest.newBuilder();
              if (hasGetRaceRoleNumRequest()) {
                subBuilder.mergeFrom(getGetRaceRoleNumRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGetRaceRoleNumRequest(subBuilder.buildPartial());
              break;
            }
            case 274: {
              com.randioo.shizurongyao_server.protocol.Race.RaceSignUpRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Race.RaceSignUpRequest.newBuilder();
              if (hasRaceSignUpRequest()) {
                subBuilder.mergeFrom(getRaceSignUpRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRaceSignUpRequest(subBuilder.buildPartial());
              break;
            }
            case 282: {
              com.randioo.shizurongyao_server.protocol.Race.RaceCancelSignUpRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Race.RaceCancelSignUpRequest.newBuilder();
              if (hasRaceCancelSignUpRequest()) {
                subBuilder.mergeFrom(getRaceCancelSignUpRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRaceCancelSignUpRequest(subBuilder.buildPartial());
              break;
            }
            case 290: {
              com.randioo.shizurongyao_server.protocol.Race.RaceDescRequest.Builder subBuilder = com.randioo.shizurongyao_server.protocol.Race.RaceDescRequest.newBuilder();
              if (hasRaceDescRequest()) {
                subBuilder.mergeFrom(getRaceDescRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRaceDescRequest(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .com.randioo.shizurongyao_server.protocol.LoginCheckAccountRequest LoginCheckAccountRequest = 1;
      public boolean hasLoginCheckAccountRequest() {
        return result.hasLoginCheckAccountRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Login.LoginCheckAccountRequest getLoginCheckAccountRequest() {
        return result.getLoginCheckAccountRequest();
      }
      public Builder setLoginCheckAccountRequest(com.randioo.shizurongyao_server.protocol.Login.LoginCheckAccountRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLoginCheckAccountRequest = true;
        result.loginCheckAccountRequest_ = value;
        return this;
      }
      public Builder setLoginCheckAccountRequest(com.randioo.shizurongyao_server.protocol.Login.LoginCheckAccountRequest.Builder builderForValue) {
        result.hasLoginCheckAccountRequest = true;
        result.loginCheckAccountRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeLoginCheckAccountRequest(com.randioo.shizurongyao_server.protocol.Login.LoginCheckAccountRequest value) {
        if (result.hasLoginCheckAccountRequest() &&
            result.loginCheckAccountRequest_ != com.randioo.shizurongyao_server.protocol.Login.LoginCheckAccountRequest.getDefaultInstance()) {
          result.loginCheckAccountRequest_ =
            com.randioo.shizurongyao_server.protocol.Login.LoginCheckAccountRequest.newBuilder(result.loginCheckAccountRequest_).mergeFrom(value).buildPartial();
        } else {
          result.loginCheckAccountRequest_ = value;
        }
        result.hasLoginCheckAccountRequest = true;
        return this;
      }
      public Builder clearLoginCheckAccountRequest() {
        result.hasLoginCheckAccountRequest = false;
        result.loginCheckAccountRequest_ = com.randioo.shizurongyao_server.protocol.Login.LoginCheckAccountRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.LoginCreateRoleRequest LoginCreateRoleRequest = 2;
      public boolean hasLoginCreateRoleRequest() {
        return result.hasLoginCreateRoleRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Login.LoginCreateRoleRequest getLoginCreateRoleRequest() {
        return result.getLoginCreateRoleRequest();
      }
      public Builder setLoginCreateRoleRequest(com.randioo.shizurongyao_server.protocol.Login.LoginCreateRoleRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLoginCreateRoleRequest = true;
        result.loginCreateRoleRequest_ = value;
        return this;
      }
      public Builder setLoginCreateRoleRequest(com.randioo.shizurongyao_server.protocol.Login.LoginCreateRoleRequest.Builder builderForValue) {
        result.hasLoginCreateRoleRequest = true;
        result.loginCreateRoleRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeLoginCreateRoleRequest(com.randioo.shizurongyao_server.protocol.Login.LoginCreateRoleRequest value) {
        if (result.hasLoginCreateRoleRequest() &&
            result.loginCreateRoleRequest_ != com.randioo.shizurongyao_server.protocol.Login.LoginCreateRoleRequest.getDefaultInstance()) {
          result.loginCreateRoleRequest_ =
            com.randioo.shizurongyao_server.protocol.Login.LoginCreateRoleRequest.newBuilder(result.loginCreateRoleRequest_).mergeFrom(value).buildPartial();
        } else {
          result.loginCreateRoleRequest_ = value;
        }
        result.hasLoginCreateRoleRequest = true;
        return this;
      }
      public Builder clearLoginCreateRoleRequest() {
        result.hasLoginCreateRoleRequest = false;
        result.loginCreateRoleRequest_ = com.randioo.shizurongyao_server.protocol.Login.LoginCreateRoleRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.LoginGetRoleDataRequest LoginGetRoleDataRequest = 3;
      public boolean hasLoginGetRoleDataRequest() {
        return result.hasLoginGetRoleDataRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Login.LoginGetRoleDataRequest getLoginGetRoleDataRequest() {
        return result.getLoginGetRoleDataRequest();
      }
      public Builder setLoginGetRoleDataRequest(com.randioo.shizurongyao_server.protocol.Login.LoginGetRoleDataRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLoginGetRoleDataRequest = true;
        result.loginGetRoleDataRequest_ = value;
        return this;
      }
      public Builder setLoginGetRoleDataRequest(com.randioo.shizurongyao_server.protocol.Login.LoginGetRoleDataRequest.Builder builderForValue) {
        result.hasLoginGetRoleDataRequest = true;
        result.loginGetRoleDataRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeLoginGetRoleDataRequest(com.randioo.shizurongyao_server.protocol.Login.LoginGetRoleDataRequest value) {
        if (result.hasLoginGetRoleDataRequest() &&
            result.loginGetRoleDataRequest_ != com.randioo.shizurongyao_server.protocol.Login.LoginGetRoleDataRequest.getDefaultInstance()) {
          result.loginGetRoleDataRequest_ =
            com.randioo.shizurongyao_server.protocol.Login.LoginGetRoleDataRequest.newBuilder(result.loginGetRoleDataRequest_).mergeFrom(value).buildPartial();
        } else {
          result.loginGetRoleDataRequest_ = value;
        }
        result.hasLoginGetRoleDataRequest = true;
        return this;
      }
      public Builder clearLoginGetRoleDataRequest() {
        result.hasLoginGetRoleDataRequest = false;
        result.loginGetRoleDataRequest_ = com.randioo.shizurongyao_server.protocol.Login.LoginGetRoleDataRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.FightClientReadyRequest FightClientReadyRequest = 4;
      public boolean hasFightClientReadyRequest() {
        return result.hasFightClientReadyRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Fight.FightClientReadyRequest getFightClientReadyRequest() {
        return result.getFightClientReadyRequest();
      }
      public Builder setFightClientReadyRequest(com.randioo.shizurongyao_server.protocol.Fight.FightClientReadyRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightClientReadyRequest = true;
        result.fightClientReadyRequest_ = value;
        return this;
      }
      public Builder setFightClientReadyRequest(com.randioo.shizurongyao_server.protocol.Fight.FightClientReadyRequest.Builder builderForValue) {
        result.hasFightClientReadyRequest = true;
        result.fightClientReadyRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightClientReadyRequest(com.randioo.shizurongyao_server.protocol.Fight.FightClientReadyRequest value) {
        if (result.hasFightClientReadyRequest() &&
            result.fightClientReadyRequest_ != com.randioo.shizurongyao_server.protocol.Fight.FightClientReadyRequest.getDefaultInstance()) {
          result.fightClientReadyRequest_ =
            com.randioo.shizurongyao_server.protocol.Fight.FightClientReadyRequest.newBuilder(result.fightClientReadyRequest_).mergeFrom(value).buildPartial();
        } else {
          result.fightClientReadyRequest_ = value;
        }
        result.hasFightClientReadyRequest = true;
        return this;
      }
      public Builder clearFightClientReadyRequest() {
        result.hasFightClientReadyRequest = false;
        result.fightClientReadyRequest_ = com.randioo.shizurongyao_server.protocol.Fight.FightClientReadyRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.FightGameActionRequest FightGameActionRequest = 5;
      public boolean hasFightGameActionRequest() {
        return result.hasFightGameActionRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Fight.FightGameActionRequest getFightGameActionRequest() {
        return result.getFightGameActionRequest();
      }
      public Builder setFightGameActionRequest(com.randioo.shizurongyao_server.protocol.Fight.FightGameActionRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightGameActionRequest = true;
        result.fightGameActionRequest_ = value;
        return this;
      }
      public Builder setFightGameActionRequest(com.randioo.shizurongyao_server.protocol.Fight.FightGameActionRequest.Builder builderForValue) {
        result.hasFightGameActionRequest = true;
        result.fightGameActionRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightGameActionRequest(com.randioo.shizurongyao_server.protocol.Fight.FightGameActionRequest value) {
        if (result.hasFightGameActionRequest() &&
            result.fightGameActionRequest_ != com.randioo.shizurongyao_server.protocol.Fight.FightGameActionRequest.getDefaultInstance()) {
          result.fightGameActionRequest_ =
            com.randioo.shizurongyao_server.protocol.Fight.FightGameActionRequest.newBuilder(result.fightGameActionRequest_).mergeFrom(value).buildPartial();
        } else {
          result.fightGameActionRequest_ = value;
        }
        result.hasFightGameActionRequest = true;
        return this;
      }
      public Builder clearFightGameActionRequest() {
        result.hasFightGameActionRequest = false;
        result.fightGameActionRequest_ = com.randioo.shizurongyao_server.protocol.Fight.FightGameActionRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.FightGameOverRequest FightGameOverRequest = 6;
      public boolean hasFightGameOverRequest() {
        return result.hasFightGameOverRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Fight.FightGameOverRequest getFightGameOverRequest() {
        return result.getFightGameOverRequest();
      }
      public Builder setFightGameOverRequest(com.randioo.shizurongyao_server.protocol.Fight.FightGameOverRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightGameOverRequest = true;
        result.fightGameOverRequest_ = value;
        return this;
      }
      public Builder setFightGameOverRequest(com.randioo.shizurongyao_server.protocol.Fight.FightGameOverRequest.Builder builderForValue) {
        result.hasFightGameOverRequest = true;
        result.fightGameOverRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightGameOverRequest(com.randioo.shizurongyao_server.protocol.Fight.FightGameOverRequest value) {
        if (result.hasFightGameOverRequest() &&
            result.fightGameOverRequest_ != com.randioo.shizurongyao_server.protocol.Fight.FightGameOverRequest.getDefaultInstance()) {
          result.fightGameOverRequest_ =
            com.randioo.shizurongyao_server.protocol.Fight.FightGameOverRequest.newBuilder(result.fightGameOverRequest_).mergeFrom(value).buildPartial();
        } else {
          result.fightGameOverRequest_ = value;
        }
        result.hasFightGameOverRequest = true;
        return this;
      }
      public Builder clearFightGameOverRequest() {
        result.hasFightGameOverRequest = false;
        result.fightGameOverRequest_ = com.randioo.shizurongyao_server.protocol.Fight.FightGameOverRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.FightGetGameAwardRequest FightGetGameAwardRequest = 7;
      public boolean hasFightGetGameAwardRequest() {
        return result.hasFightGetGameAwardRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Fight.FightGetGameAwardRequest getFightGetGameAwardRequest() {
        return result.getFightGetGameAwardRequest();
      }
      public Builder setFightGetGameAwardRequest(com.randioo.shizurongyao_server.protocol.Fight.FightGetGameAwardRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightGetGameAwardRequest = true;
        result.fightGetGameAwardRequest_ = value;
        return this;
      }
      public Builder setFightGetGameAwardRequest(com.randioo.shizurongyao_server.protocol.Fight.FightGetGameAwardRequest.Builder builderForValue) {
        result.hasFightGetGameAwardRequest = true;
        result.fightGetGameAwardRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightGetGameAwardRequest(com.randioo.shizurongyao_server.protocol.Fight.FightGetGameAwardRequest value) {
        if (result.hasFightGetGameAwardRequest() &&
            result.fightGetGameAwardRequest_ != com.randioo.shizurongyao_server.protocol.Fight.FightGetGameAwardRequest.getDefaultInstance()) {
          result.fightGetGameAwardRequest_ =
            com.randioo.shizurongyao_server.protocol.Fight.FightGetGameAwardRequest.newBuilder(result.fightGetGameAwardRequest_).mergeFrom(value).buildPartial();
        } else {
          result.fightGetGameAwardRequest_ = value;
        }
        result.hasFightGetGameAwardRequest = true;
        return this;
      }
      public Builder clearFightGetGameAwardRequest() {
        result.hasFightGetGameAwardRequest = false;
        result.fightGetGameAwardRequest_ = com.randioo.shizurongyao_server.protocol.Fight.FightGetGameAwardRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.FightCountDownRequest FightCountDownRequest = 8;
      public boolean hasFightCountDownRequest() {
        return result.hasFightCountDownRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Fight.FightCountDownRequest getFightCountDownRequest() {
        return result.getFightCountDownRequest();
      }
      public Builder setFightCountDownRequest(com.randioo.shizurongyao_server.protocol.Fight.FightCountDownRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightCountDownRequest = true;
        result.fightCountDownRequest_ = value;
        return this;
      }
      public Builder setFightCountDownRequest(com.randioo.shizurongyao_server.protocol.Fight.FightCountDownRequest.Builder builderForValue) {
        result.hasFightCountDownRequest = true;
        result.fightCountDownRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightCountDownRequest(com.randioo.shizurongyao_server.protocol.Fight.FightCountDownRequest value) {
        if (result.hasFightCountDownRequest() &&
            result.fightCountDownRequest_ != com.randioo.shizurongyao_server.protocol.Fight.FightCountDownRequest.getDefaultInstance()) {
          result.fightCountDownRequest_ =
            com.randioo.shizurongyao_server.protocol.Fight.FightCountDownRequest.newBuilder(result.fightCountDownRequest_).mergeFrom(value).buildPartial();
        } else {
          result.fightCountDownRequest_ = value;
        }
        result.hasFightCountDownRequest = true;
        return this;
      }
      public Builder clearFightCountDownRequest() {
        result.hasFightCountDownRequest = false;
        result.fightCountDownRequest_ = com.randioo.shizurongyao_server.protocol.Fight.FightCountDownRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.FightLoadResourceProgressRequest FightLoadResourceProgressRequest = 9;
      public boolean hasFightLoadResourceProgressRequest() {
        return result.hasFightLoadResourceProgressRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Fight.FightLoadResourceProgressRequest getFightLoadResourceProgressRequest() {
        return result.getFightLoadResourceProgressRequest();
      }
      public Builder setFightLoadResourceProgressRequest(com.randioo.shizurongyao_server.protocol.Fight.FightLoadResourceProgressRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightLoadResourceProgressRequest = true;
        result.fightLoadResourceProgressRequest_ = value;
        return this;
      }
      public Builder setFightLoadResourceProgressRequest(com.randioo.shizurongyao_server.protocol.Fight.FightLoadResourceProgressRequest.Builder builderForValue) {
        result.hasFightLoadResourceProgressRequest = true;
        result.fightLoadResourceProgressRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightLoadResourceProgressRequest(com.randioo.shizurongyao_server.protocol.Fight.FightLoadResourceProgressRequest value) {
        if (result.hasFightLoadResourceProgressRequest() &&
            result.fightLoadResourceProgressRequest_ != com.randioo.shizurongyao_server.protocol.Fight.FightLoadResourceProgressRequest.getDefaultInstance()) {
          result.fightLoadResourceProgressRequest_ =
            com.randioo.shizurongyao_server.protocol.Fight.FightLoadResourceProgressRequest.newBuilder(result.fightLoadResourceProgressRequest_).mergeFrom(value).buildPartial();
        } else {
          result.fightLoadResourceProgressRequest_ = value;
        }
        result.hasFightLoadResourceProgressRequest = true;
        return this;
      }
      public Builder clearFightLoadResourceProgressRequest() {
        result.hasFightLoadResourceProgressRequest = false;
        result.fightLoadResourceProgressRequest_ = com.randioo.shizurongyao_server.protocol.Fight.FightLoadResourceProgressRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.PillageRoleRequest PillageRoleRequest = 10;
      public boolean hasPillageRoleRequest() {
        return result.hasPillageRoleRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Pillage.PillageRoleRequest getPillageRoleRequest() {
        return result.getPillageRoleRequest();
      }
      public Builder setPillageRoleRequest(com.randioo.shizurongyao_server.protocol.Pillage.PillageRoleRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPillageRoleRequest = true;
        result.pillageRoleRequest_ = value;
        return this;
      }
      public Builder setPillageRoleRequest(com.randioo.shizurongyao_server.protocol.Pillage.PillageRoleRequest.Builder builderForValue) {
        result.hasPillageRoleRequest = true;
        result.pillageRoleRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergePillageRoleRequest(com.randioo.shizurongyao_server.protocol.Pillage.PillageRoleRequest value) {
        if (result.hasPillageRoleRequest() &&
            result.pillageRoleRequest_ != com.randioo.shizurongyao_server.protocol.Pillage.PillageRoleRequest.getDefaultInstance()) {
          result.pillageRoleRequest_ =
            com.randioo.shizurongyao_server.protocol.Pillage.PillageRoleRequest.newBuilder(result.pillageRoleRequest_).mergeFrom(value).buildPartial();
        } else {
          result.pillageRoleRequest_ = value;
        }
        result.hasPillageRoleRequest = true;
        return this;
      }
      public Builder clearPillageRoleRequest() {
        result.hasPillageRoleRequest = false;
        result.pillageRoleRequest_ = com.randioo.shizurongyao_server.protocol.Pillage.PillageRoleRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.PillageCancelRequest PillageCancelRequest = 11;
      public boolean hasPillageCancelRequest() {
        return result.hasPillageCancelRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Pillage.PillageCancelRequest getPillageCancelRequest() {
        return result.getPillageCancelRequest();
      }
      public Builder setPillageCancelRequest(com.randioo.shizurongyao_server.protocol.Pillage.PillageCancelRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPillageCancelRequest = true;
        result.pillageCancelRequest_ = value;
        return this;
      }
      public Builder setPillageCancelRequest(com.randioo.shizurongyao_server.protocol.Pillage.PillageCancelRequest.Builder builderForValue) {
        result.hasPillageCancelRequest = true;
        result.pillageCancelRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergePillageCancelRequest(com.randioo.shizurongyao_server.protocol.Pillage.PillageCancelRequest value) {
        if (result.hasPillageCancelRequest() &&
            result.pillageCancelRequest_ != com.randioo.shizurongyao_server.protocol.Pillage.PillageCancelRequest.getDefaultInstance()) {
          result.pillageCancelRequest_ =
            com.randioo.shizurongyao_server.protocol.Pillage.PillageCancelRequest.newBuilder(result.pillageCancelRequest_).mergeFrom(value).buildPartial();
        } else {
          result.pillageCancelRequest_ = value;
        }
        result.hasPillageCancelRequest = true;
        return this;
      }
      public Builder clearPillageCancelRequest() {
        result.hasPillageCancelRequest = false;
        result.pillageCancelRequest_ = com.randioo.shizurongyao_server.protocol.Pillage.PillageCancelRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.PillageShowRequest PillageShowRequest = 12;
      public boolean hasPillageShowRequest() {
        return result.hasPillageShowRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Pillage.PillageShowRequest getPillageShowRequest() {
        return result.getPillageShowRequest();
      }
      public Builder setPillageShowRequest(com.randioo.shizurongyao_server.protocol.Pillage.PillageShowRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPillageShowRequest = true;
        result.pillageShowRequest_ = value;
        return this;
      }
      public Builder setPillageShowRequest(com.randioo.shizurongyao_server.protocol.Pillage.PillageShowRequest.Builder builderForValue) {
        result.hasPillageShowRequest = true;
        result.pillageShowRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergePillageShowRequest(com.randioo.shizurongyao_server.protocol.Pillage.PillageShowRequest value) {
        if (result.hasPillageShowRequest() &&
            result.pillageShowRequest_ != com.randioo.shizurongyao_server.protocol.Pillage.PillageShowRequest.getDefaultInstance()) {
          result.pillageShowRequest_ =
            com.randioo.shizurongyao_server.protocol.Pillage.PillageShowRequest.newBuilder(result.pillageShowRequest_).mergeFrom(value).buildPartial();
        } else {
          result.pillageShowRequest_ = value;
        }
        result.hasPillageShowRequest = true;
        return this;
      }
      public Builder clearPillageShowRequest() {
        result.hasPillageShowRequest = false;
        result.pillageShowRequest_ = com.randioo.shizurongyao_server.protocol.Pillage.PillageShowRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.PillageCompetitionNoticeRequest PillageCompetitionNoticeRequest = 13;
      public boolean hasPillageCompetitionNoticeRequest() {
        return result.hasPillageCompetitionNoticeRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Pillage.PillageCompetitionNoticeRequest getPillageCompetitionNoticeRequest() {
        return result.getPillageCompetitionNoticeRequest();
      }
      public Builder setPillageCompetitionNoticeRequest(com.randioo.shizurongyao_server.protocol.Pillage.PillageCompetitionNoticeRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPillageCompetitionNoticeRequest = true;
        result.pillageCompetitionNoticeRequest_ = value;
        return this;
      }
      public Builder setPillageCompetitionNoticeRequest(com.randioo.shizurongyao_server.protocol.Pillage.PillageCompetitionNoticeRequest.Builder builderForValue) {
        result.hasPillageCompetitionNoticeRequest = true;
        result.pillageCompetitionNoticeRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergePillageCompetitionNoticeRequest(com.randioo.shizurongyao_server.protocol.Pillage.PillageCompetitionNoticeRequest value) {
        if (result.hasPillageCompetitionNoticeRequest() &&
            result.pillageCompetitionNoticeRequest_ != com.randioo.shizurongyao_server.protocol.Pillage.PillageCompetitionNoticeRequest.getDefaultInstance()) {
          result.pillageCompetitionNoticeRequest_ =
            com.randioo.shizurongyao_server.protocol.Pillage.PillageCompetitionNoticeRequest.newBuilder(result.pillageCompetitionNoticeRequest_).mergeFrom(value).buildPartial();
        } else {
          result.pillageCompetitionNoticeRequest_ = value;
        }
        result.hasPillageCompetitionNoticeRequest = true;
        return this;
      }
      public Builder clearPillageCompetitionNoticeRequest() {
        result.hasPillageCompetitionNoticeRequest = false;
        result.pillageCompetitionNoticeRequest_ = com.randioo.shizurongyao_server.protocol.Pillage.PillageCompetitionNoticeRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.PillagePracticeRequest PillagePracticeRequest = 14;
      public boolean hasPillagePracticeRequest() {
        return result.hasPillagePracticeRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Pillage.PillagePracticeRequest getPillagePracticeRequest() {
        return result.getPillagePracticeRequest();
      }
      public Builder setPillagePracticeRequest(com.randioo.shizurongyao_server.protocol.Pillage.PillagePracticeRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPillagePracticeRequest = true;
        result.pillagePracticeRequest_ = value;
        return this;
      }
      public Builder setPillagePracticeRequest(com.randioo.shizurongyao_server.protocol.Pillage.PillagePracticeRequest.Builder builderForValue) {
        result.hasPillagePracticeRequest = true;
        result.pillagePracticeRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergePillagePracticeRequest(com.randioo.shizurongyao_server.protocol.Pillage.PillagePracticeRequest value) {
        if (result.hasPillagePracticeRequest() &&
            result.pillagePracticeRequest_ != com.randioo.shizurongyao_server.protocol.Pillage.PillagePracticeRequest.getDefaultInstance()) {
          result.pillagePracticeRequest_ =
            com.randioo.shizurongyao_server.protocol.Pillage.PillagePracticeRequest.newBuilder(result.pillagePracticeRequest_).mergeFrom(value).buildPartial();
        } else {
          result.pillagePracticeRequest_ = value;
        }
        result.hasPillagePracticeRequest = true;
        return this;
      }
      public Builder clearPillagePracticeRequest() {
        result.hasPillagePracticeRequest = false;
        result.pillagePracticeRequest_ = com.randioo.shizurongyao_server.protocol.Pillage.PillagePracticeRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.CardGetCardsInfoRequest CardGetCardsInfoRequest = 15;
      public boolean hasCardGetCardsInfoRequest() {
        return result.hasCardGetCardsInfoRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Card.CardGetCardsInfoRequest getCardGetCardsInfoRequest() {
        return result.getCardGetCardsInfoRequest();
      }
      public Builder setCardGetCardsInfoRequest(com.randioo.shizurongyao_server.protocol.Card.CardGetCardsInfoRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCardGetCardsInfoRequest = true;
        result.cardGetCardsInfoRequest_ = value;
        return this;
      }
      public Builder setCardGetCardsInfoRequest(com.randioo.shizurongyao_server.protocol.Card.CardGetCardsInfoRequest.Builder builderForValue) {
        result.hasCardGetCardsInfoRequest = true;
        result.cardGetCardsInfoRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeCardGetCardsInfoRequest(com.randioo.shizurongyao_server.protocol.Card.CardGetCardsInfoRequest value) {
        if (result.hasCardGetCardsInfoRequest() &&
            result.cardGetCardsInfoRequest_ != com.randioo.shizurongyao_server.protocol.Card.CardGetCardsInfoRequest.getDefaultInstance()) {
          result.cardGetCardsInfoRequest_ =
            com.randioo.shizurongyao_server.protocol.Card.CardGetCardsInfoRequest.newBuilder(result.cardGetCardsInfoRequest_).mergeFrom(value).buildPartial();
        } else {
          result.cardGetCardsInfoRequest_ = value;
        }
        result.hasCardGetCardsInfoRequest = true;
        return this;
      }
      public Builder clearCardGetCardsInfoRequest() {
        result.hasCardGetCardsInfoRequest = false;
        result.cardGetCardsInfoRequest_ = com.randioo.shizurongyao_server.protocol.Card.CardGetCardsInfoRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.CardEditCardListRequest CardEditCardListRequest = 16;
      public boolean hasCardEditCardListRequest() {
        return result.hasCardEditCardListRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Card.CardEditCardListRequest getCardEditCardListRequest() {
        return result.getCardEditCardListRequest();
      }
      public Builder setCardEditCardListRequest(com.randioo.shizurongyao_server.protocol.Card.CardEditCardListRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCardEditCardListRequest = true;
        result.cardEditCardListRequest_ = value;
        return this;
      }
      public Builder setCardEditCardListRequest(com.randioo.shizurongyao_server.protocol.Card.CardEditCardListRequest.Builder builderForValue) {
        result.hasCardEditCardListRequest = true;
        result.cardEditCardListRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeCardEditCardListRequest(com.randioo.shizurongyao_server.protocol.Card.CardEditCardListRequest value) {
        if (result.hasCardEditCardListRequest() &&
            result.cardEditCardListRequest_ != com.randioo.shizurongyao_server.protocol.Card.CardEditCardListRequest.getDefaultInstance()) {
          result.cardEditCardListRequest_ =
            com.randioo.shizurongyao_server.protocol.Card.CardEditCardListRequest.newBuilder(result.cardEditCardListRequest_).mergeFrom(value).buildPartial();
        } else {
          result.cardEditCardListRequest_ = value;
        }
        result.hasCardEditCardListRequest = true;
        return this;
      }
      public Builder clearCardEditCardListRequest() {
        result.hasCardEditCardListRequest = false;
        result.cardEditCardListRequest_ = com.randioo.shizurongyao_server.protocol.Card.CardEditCardListRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.CardLvUpRequest CardLvUpRequest = 17;
      public boolean hasCardLvUpRequest() {
        return result.hasCardLvUpRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Card.CardLvUpRequest getCardLvUpRequest() {
        return result.getCardLvUpRequest();
      }
      public Builder setCardLvUpRequest(com.randioo.shizurongyao_server.protocol.Card.CardLvUpRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCardLvUpRequest = true;
        result.cardLvUpRequest_ = value;
        return this;
      }
      public Builder setCardLvUpRequest(com.randioo.shizurongyao_server.protocol.Card.CardLvUpRequest.Builder builderForValue) {
        result.hasCardLvUpRequest = true;
        result.cardLvUpRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeCardLvUpRequest(com.randioo.shizurongyao_server.protocol.Card.CardLvUpRequest value) {
        if (result.hasCardLvUpRequest() &&
            result.cardLvUpRequest_ != com.randioo.shizurongyao_server.protocol.Card.CardLvUpRequest.getDefaultInstance()) {
          result.cardLvUpRequest_ =
            com.randioo.shizurongyao_server.protocol.Card.CardLvUpRequest.newBuilder(result.cardLvUpRequest_).mergeFrom(value).buildPartial();
        } else {
          result.cardLvUpRequest_ = value;
        }
        result.hasCardLvUpRequest = true;
        return this;
      }
      public Builder clearCardLvUpRequest() {
        result.hasCardLvUpRequest = false;
        result.cardLvUpRequest_ = com.randioo.shizurongyao_server.protocol.Card.CardLvUpRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.CardChooseUseCardListRequest CardChooseUseCardListRequest = 18;
      public boolean hasCardChooseUseCardListRequest() {
        return result.hasCardChooseUseCardListRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Card.CardChooseUseCardListRequest getCardChooseUseCardListRequest() {
        return result.getCardChooseUseCardListRequest();
      }
      public Builder setCardChooseUseCardListRequest(com.randioo.shizurongyao_server.protocol.Card.CardChooseUseCardListRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCardChooseUseCardListRequest = true;
        result.cardChooseUseCardListRequest_ = value;
        return this;
      }
      public Builder setCardChooseUseCardListRequest(com.randioo.shizurongyao_server.protocol.Card.CardChooseUseCardListRequest.Builder builderForValue) {
        result.hasCardChooseUseCardListRequest = true;
        result.cardChooseUseCardListRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeCardChooseUseCardListRequest(com.randioo.shizurongyao_server.protocol.Card.CardChooseUseCardListRequest value) {
        if (result.hasCardChooseUseCardListRequest() &&
            result.cardChooseUseCardListRequest_ != com.randioo.shizurongyao_server.protocol.Card.CardChooseUseCardListRequest.getDefaultInstance()) {
          result.cardChooseUseCardListRequest_ =
            com.randioo.shizurongyao_server.protocol.Card.CardChooseUseCardListRequest.newBuilder(result.cardChooseUseCardListRequest_).mergeFrom(value).buildPartial();
        } else {
          result.cardChooseUseCardListRequest_ = value;
        }
        result.hasCardChooseUseCardListRequest = true;
        return this;
      }
      public Builder clearCardChooseUseCardListRequest() {
        result.hasCardChooseUseCardListRequest = false;
        result.cardChooseUseCardListRequest_ = com.randioo.shizurongyao_server.protocol.Card.CardChooseUseCardListRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.CardChangeMainCardRequest CardChangeMainCardRequest = 19;
      public boolean hasCardChangeMainCardRequest() {
        return result.hasCardChangeMainCardRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Card.CardChangeMainCardRequest getCardChangeMainCardRequest() {
        return result.getCardChangeMainCardRequest();
      }
      public Builder setCardChangeMainCardRequest(com.randioo.shizurongyao_server.protocol.Card.CardChangeMainCardRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCardChangeMainCardRequest = true;
        result.cardChangeMainCardRequest_ = value;
        return this;
      }
      public Builder setCardChangeMainCardRequest(com.randioo.shizurongyao_server.protocol.Card.CardChangeMainCardRequest.Builder builderForValue) {
        result.hasCardChangeMainCardRequest = true;
        result.cardChangeMainCardRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeCardChangeMainCardRequest(com.randioo.shizurongyao_server.protocol.Card.CardChangeMainCardRequest value) {
        if (result.hasCardChangeMainCardRequest() &&
            result.cardChangeMainCardRequest_ != com.randioo.shizurongyao_server.protocol.Card.CardChangeMainCardRequest.getDefaultInstance()) {
          result.cardChangeMainCardRequest_ =
            com.randioo.shizurongyao_server.protocol.Card.CardChangeMainCardRequest.newBuilder(result.cardChangeMainCardRequest_).mergeFrom(value).buildPartial();
        } else {
          result.cardChangeMainCardRequest_ = value;
        }
        result.hasCardChangeMainCardRequest = true;
        return this;
      }
      public Builder clearCardChangeMainCardRequest() {
        result.hasCardChangeMainCardRequest = false;
        result.cardChangeMainCardRequest_ = com.randioo.shizurongyao_server.protocol.Card.CardChangeMainCardRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.PingRequest PingRequest = 20;
      public boolean hasPingRequest() {
        return result.hasPingRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Ping.PingRequest getPingRequest() {
        return result.getPingRequest();
      }
      public Builder setPingRequest(com.randioo.shizurongyao_server.protocol.Ping.PingRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPingRequest = true;
        result.pingRequest_ = value;
        return this;
      }
      public Builder setPingRequest(com.randioo.shizurongyao_server.protocol.Ping.PingRequest.Builder builderForValue) {
        result.hasPingRequest = true;
        result.pingRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergePingRequest(com.randioo.shizurongyao_server.protocol.Ping.PingRequest value) {
        if (result.hasPingRequest() &&
            result.pingRequest_ != com.randioo.shizurongyao_server.protocol.Ping.PingRequest.getDefaultInstance()) {
          result.pingRequest_ =
            com.randioo.shizurongyao_server.protocol.Ping.PingRequest.newBuilder(result.pingRequest_).mergeFrom(value).buildPartial();
        } else {
          result.pingRequest_ = value;
        }
        result.hasPingRequest = true;
        return this;
      }
      public Builder clearPingRequest() {
        result.hasPingRequest = false;
        result.pingRequest_ = com.randioo.shizurongyao_server.protocol.Ping.PingRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.MarketBuyMarketItemRequest MarketBuyMarketItemRequest = 21;
      public boolean hasMarketBuyMarketItemRequest() {
        return result.hasMarketBuyMarketItemRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Market.MarketBuyMarketItemRequest getMarketBuyMarketItemRequest() {
        return result.getMarketBuyMarketItemRequest();
      }
      public Builder setMarketBuyMarketItemRequest(com.randioo.shizurongyao_server.protocol.Market.MarketBuyMarketItemRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMarketBuyMarketItemRequest = true;
        result.marketBuyMarketItemRequest_ = value;
        return this;
      }
      public Builder setMarketBuyMarketItemRequest(com.randioo.shizurongyao_server.protocol.Market.MarketBuyMarketItemRequest.Builder builderForValue) {
        result.hasMarketBuyMarketItemRequest = true;
        result.marketBuyMarketItemRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeMarketBuyMarketItemRequest(com.randioo.shizurongyao_server.protocol.Market.MarketBuyMarketItemRequest value) {
        if (result.hasMarketBuyMarketItemRequest() &&
            result.marketBuyMarketItemRequest_ != com.randioo.shizurongyao_server.protocol.Market.MarketBuyMarketItemRequest.getDefaultInstance()) {
          result.marketBuyMarketItemRequest_ =
            com.randioo.shizurongyao_server.protocol.Market.MarketBuyMarketItemRequest.newBuilder(result.marketBuyMarketItemRequest_).mergeFrom(value).buildPartial();
        } else {
          result.marketBuyMarketItemRequest_ = value;
        }
        result.hasMarketBuyMarketItemRequest = true;
        return this;
      }
      public Builder clearMarketBuyMarketItemRequest() {
        result.hasMarketBuyMarketItemRequest = false;
        result.marketBuyMarketItemRequest_ = com.randioo.shizurongyao_server.protocol.Market.MarketBuyMarketItemRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.MarketArtificialRefreshRequest MarketArtificialRefreshRequest = 22;
      public boolean hasMarketArtificialRefreshRequest() {
        return result.hasMarketArtificialRefreshRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Market.MarketArtificialRefreshRequest getMarketArtificialRefreshRequest() {
        return result.getMarketArtificialRefreshRequest();
      }
      public Builder setMarketArtificialRefreshRequest(com.randioo.shizurongyao_server.protocol.Market.MarketArtificialRefreshRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMarketArtificialRefreshRequest = true;
        result.marketArtificialRefreshRequest_ = value;
        return this;
      }
      public Builder setMarketArtificialRefreshRequest(com.randioo.shizurongyao_server.protocol.Market.MarketArtificialRefreshRequest.Builder builderForValue) {
        result.hasMarketArtificialRefreshRequest = true;
        result.marketArtificialRefreshRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeMarketArtificialRefreshRequest(com.randioo.shizurongyao_server.protocol.Market.MarketArtificialRefreshRequest value) {
        if (result.hasMarketArtificialRefreshRequest() &&
            result.marketArtificialRefreshRequest_ != com.randioo.shizurongyao_server.protocol.Market.MarketArtificialRefreshRequest.getDefaultInstance()) {
          result.marketArtificialRefreshRequest_ =
            com.randioo.shizurongyao_server.protocol.Market.MarketArtificialRefreshRequest.newBuilder(result.marketArtificialRefreshRequest_).mergeFrom(value).buildPartial();
        } else {
          result.marketArtificialRefreshRequest_ = value;
        }
        result.hasMarketArtificialRefreshRequest = true;
        return this;
      }
      public Builder clearMarketArtificialRefreshRequest() {
        result.hasMarketArtificialRefreshRequest = false;
        result.marketArtificialRefreshRequest_ = com.randioo.shizurongyao_server.protocol.Market.MarketArtificialRefreshRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.MarketShowRequest MarketShowRequest = 23;
      public boolean hasMarketShowRequest() {
        return result.hasMarketShowRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Market.MarketShowRequest getMarketShowRequest() {
        return result.getMarketShowRequest();
      }
      public Builder setMarketShowRequest(com.randioo.shizurongyao_server.protocol.Market.MarketShowRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMarketShowRequest = true;
        result.marketShowRequest_ = value;
        return this;
      }
      public Builder setMarketShowRequest(com.randioo.shizurongyao_server.protocol.Market.MarketShowRequest.Builder builderForValue) {
        result.hasMarketShowRequest = true;
        result.marketShowRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeMarketShowRequest(com.randioo.shizurongyao_server.protocol.Market.MarketShowRequest value) {
        if (result.hasMarketShowRequest() &&
            result.marketShowRequest_ != com.randioo.shizurongyao_server.protocol.Market.MarketShowRequest.getDefaultInstance()) {
          result.marketShowRequest_ =
            com.randioo.shizurongyao_server.protocol.Market.MarketShowRequest.newBuilder(result.marketShowRequest_).mergeFrom(value).buildPartial();
        } else {
          result.marketShowRequest_ = value;
        }
        result.hasMarketShowRequest = true;
        return this;
      }
      public Builder clearMarketShowRequest() {
        result.hasMarketShowRequest = false;
        result.marketShowRequest_ = com.randioo.shizurongyao_server.protocol.Market.MarketShowRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.WarShowWarChapterRequest WarShowWarChapterRequest = 24;
      public boolean hasWarShowWarChapterRequest() {
        return result.hasWarShowWarChapterRequest();
      }
      public com.randioo.shizurongyao_server.protocol.War.WarShowWarChapterRequest getWarShowWarChapterRequest() {
        return result.getWarShowWarChapterRequest();
      }
      public Builder setWarShowWarChapterRequest(com.randioo.shizurongyao_server.protocol.War.WarShowWarChapterRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasWarShowWarChapterRequest = true;
        result.warShowWarChapterRequest_ = value;
        return this;
      }
      public Builder setWarShowWarChapterRequest(com.randioo.shizurongyao_server.protocol.War.WarShowWarChapterRequest.Builder builderForValue) {
        result.hasWarShowWarChapterRequest = true;
        result.warShowWarChapterRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeWarShowWarChapterRequest(com.randioo.shizurongyao_server.protocol.War.WarShowWarChapterRequest value) {
        if (result.hasWarShowWarChapterRequest() &&
            result.warShowWarChapterRequest_ != com.randioo.shizurongyao_server.protocol.War.WarShowWarChapterRequest.getDefaultInstance()) {
          result.warShowWarChapterRequest_ =
            com.randioo.shizurongyao_server.protocol.War.WarShowWarChapterRequest.newBuilder(result.warShowWarChapterRequest_).mergeFrom(value).buildPartial();
        } else {
          result.warShowWarChapterRequest_ = value;
        }
        result.hasWarShowWarChapterRequest = true;
        return this;
      }
      public Builder clearWarShowWarChapterRequest() {
        result.hasWarShowWarChapterRequest = false;
        result.warShowWarChapterRequest_ = com.randioo.shizurongyao_server.protocol.War.WarShowWarChapterRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.WarShowWarBuildRequest WarShowWarBuildRequest = 25;
      public boolean hasWarShowWarBuildRequest() {
        return result.hasWarShowWarBuildRequest();
      }
      public com.randioo.shizurongyao_server.protocol.War.WarShowWarBuildRequest getWarShowWarBuildRequest() {
        return result.getWarShowWarBuildRequest();
      }
      public Builder setWarShowWarBuildRequest(com.randioo.shizurongyao_server.protocol.War.WarShowWarBuildRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasWarShowWarBuildRequest = true;
        result.warShowWarBuildRequest_ = value;
        return this;
      }
      public Builder setWarShowWarBuildRequest(com.randioo.shizurongyao_server.protocol.War.WarShowWarBuildRequest.Builder builderForValue) {
        result.hasWarShowWarBuildRequest = true;
        result.warShowWarBuildRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeWarShowWarBuildRequest(com.randioo.shizurongyao_server.protocol.War.WarShowWarBuildRequest value) {
        if (result.hasWarShowWarBuildRequest() &&
            result.warShowWarBuildRequest_ != com.randioo.shizurongyao_server.protocol.War.WarShowWarBuildRequest.getDefaultInstance()) {
          result.warShowWarBuildRequest_ =
            com.randioo.shizurongyao_server.protocol.War.WarShowWarBuildRequest.newBuilder(result.warShowWarBuildRequest_).mergeFrom(value).buildPartial();
        } else {
          result.warShowWarBuildRequest_ = value;
        }
        result.hasWarShowWarBuildRequest = true;
        return this;
      }
      public Builder clearWarShowWarBuildRequest() {
        result.hasWarShowWarBuildRequest = false;
        result.warShowWarBuildRequest_ = com.randioo.shizurongyao_server.protocol.War.WarShowWarBuildRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.WarMarchRequest WarMarchRequest = 26;
      public boolean hasWarMarchRequest() {
        return result.hasWarMarchRequest();
      }
      public com.randioo.shizurongyao_server.protocol.War.WarMarchRequest getWarMarchRequest() {
        return result.getWarMarchRequest();
      }
      public Builder setWarMarchRequest(com.randioo.shizurongyao_server.protocol.War.WarMarchRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasWarMarchRequest = true;
        result.warMarchRequest_ = value;
        return this;
      }
      public Builder setWarMarchRequest(com.randioo.shizurongyao_server.protocol.War.WarMarchRequest.Builder builderForValue) {
        result.hasWarMarchRequest = true;
        result.warMarchRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeWarMarchRequest(com.randioo.shizurongyao_server.protocol.War.WarMarchRequest value) {
        if (result.hasWarMarchRequest() &&
            result.warMarchRequest_ != com.randioo.shizurongyao_server.protocol.War.WarMarchRequest.getDefaultInstance()) {
          result.warMarchRequest_ =
            com.randioo.shizurongyao_server.protocol.War.WarMarchRequest.newBuilder(result.warMarchRequest_).mergeFrom(value).buildPartial();
        } else {
          result.warMarchRequest_ = value;
        }
        result.hasWarMarchRequest = true;
        return this;
      }
      public Builder clearWarMarchRequest() {
        result.hasWarMarchRequest = false;
        result.warMarchRequest_ = com.randioo.shizurongyao_server.protocol.War.WarMarchRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.WarGetChapterAwardRequest WarGetChapterAwardRequest = 27;
      public boolean hasWarGetChapterAwardRequest() {
        return result.hasWarGetChapterAwardRequest();
      }
      public com.randioo.shizurongyao_server.protocol.War.WarGetChapterAwardRequest getWarGetChapterAwardRequest() {
        return result.getWarGetChapterAwardRequest();
      }
      public Builder setWarGetChapterAwardRequest(com.randioo.shizurongyao_server.protocol.War.WarGetChapterAwardRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasWarGetChapterAwardRequest = true;
        result.warGetChapterAwardRequest_ = value;
        return this;
      }
      public Builder setWarGetChapterAwardRequest(com.randioo.shizurongyao_server.protocol.War.WarGetChapterAwardRequest.Builder builderForValue) {
        result.hasWarGetChapterAwardRequest = true;
        result.warGetChapterAwardRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeWarGetChapterAwardRequest(com.randioo.shizurongyao_server.protocol.War.WarGetChapterAwardRequest value) {
        if (result.hasWarGetChapterAwardRequest() &&
            result.warGetChapterAwardRequest_ != com.randioo.shizurongyao_server.protocol.War.WarGetChapterAwardRequest.getDefaultInstance()) {
          result.warGetChapterAwardRequest_ =
            com.randioo.shizurongyao_server.protocol.War.WarGetChapterAwardRequest.newBuilder(result.warGetChapterAwardRequest_).mergeFrom(value).buildPartial();
        } else {
          result.warGetChapterAwardRequest_ = value;
        }
        result.hasWarGetChapterAwardRequest = true;
        return this;
      }
      public Builder clearWarGetChapterAwardRequest() {
        result.hasWarGetChapterAwardRequest = false;
        result.warGetChapterAwardRequest_ = com.randioo.shizurongyao_server.protocol.War.WarGetChapterAwardRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.RoleInfoSelectRequest RoleInfoSelectRequest = 28;
      public boolean hasRoleInfoSelectRequest() {
        return result.hasRoleInfoSelectRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Role.RoleInfoSelectRequest getRoleInfoSelectRequest() {
        return result.getRoleInfoSelectRequest();
      }
      public Builder setRoleInfoSelectRequest(com.randioo.shizurongyao_server.protocol.Role.RoleInfoSelectRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRoleInfoSelectRequest = true;
        result.roleInfoSelectRequest_ = value;
        return this;
      }
      public Builder setRoleInfoSelectRequest(com.randioo.shizurongyao_server.protocol.Role.RoleInfoSelectRequest.Builder builderForValue) {
        result.hasRoleInfoSelectRequest = true;
        result.roleInfoSelectRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeRoleInfoSelectRequest(com.randioo.shizurongyao_server.protocol.Role.RoleInfoSelectRequest value) {
        if (result.hasRoleInfoSelectRequest() &&
            result.roleInfoSelectRequest_ != com.randioo.shizurongyao_server.protocol.Role.RoleInfoSelectRequest.getDefaultInstance()) {
          result.roleInfoSelectRequest_ =
            com.randioo.shizurongyao_server.protocol.Role.RoleInfoSelectRequest.newBuilder(result.roleInfoSelectRequest_).mergeFrom(value).buildPartial();
        } else {
          result.roleInfoSelectRequest_ = value;
        }
        result.hasRoleInfoSelectRequest = true;
        return this;
      }
      public Builder clearRoleInfoSelectRequest() {
        result.hasRoleInfoSelectRequest = false;
        result.roleInfoSelectRequest_ = com.randioo.shizurongyao_server.protocol.Role.RoleInfoSelectRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.RoleRenameRequest RoleRenameRequest = 29;
      public boolean hasRoleRenameRequest() {
        return result.hasRoleRenameRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Role.RoleRenameRequest getRoleRenameRequest() {
        return result.getRoleRenameRequest();
      }
      public Builder setRoleRenameRequest(com.randioo.shizurongyao_server.protocol.Role.RoleRenameRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRoleRenameRequest = true;
        result.roleRenameRequest_ = value;
        return this;
      }
      public Builder setRoleRenameRequest(com.randioo.shizurongyao_server.protocol.Role.RoleRenameRequest.Builder builderForValue) {
        result.hasRoleRenameRequest = true;
        result.roleRenameRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeRoleRenameRequest(com.randioo.shizurongyao_server.protocol.Role.RoleRenameRequest value) {
        if (result.hasRoleRenameRequest() &&
            result.roleRenameRequest_ != com.randioo.shizurongyao_server.protocol.Role.RoleRenameRequest.getDefaultInstance()) {
          result.roleRenameRequest_ =
            com.randioo.shizurongyao_server.protocol.Role.RoleRenameRequest.newBuilder(result.roleRenameRequest_).mergeFrom(value).buildPartial();
        } else {
          result.roleRenameRequest_ = value;
        }
        result.hasRoleRenameRequest = true;
        return this;
      }
      public Builder clearRoleRenameRequest() {
        result.hasRoleRenameRequest = false;
        result.roleRenameRequest_ = com.randioo.shizurongyao_server.protocol.Role.RoleRenameRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.ClanShowAllClanRequest ClanShowAllClanRequest = 30;
      public boolean hasClanShowAllClanRequest() {
        return result.hasClanShowAllClanRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Clan.ClanShowAllClanRequest getClanShowAllClanRequest() {
        return result.getClanShowAllClanRequest();
      }
      public Builder setClanShowAllClanRequest(com.randioo.shizurongyao_server.protocol.Clan.ClanShowAllClanRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasClanShowAllClanRequest = true;
        result.clanShowAllClanRequest_ = value;
        return this;
      }
      public Builder setClanShowAllClanRequest(com.randioo.shizurongyao_server.protocol.Clan.ClanShowAllClanRequest.Builder builderForValue) {
        result.hasClanShowAllClanRequest = true;
        result.clanShowAllClanRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeClanShowAllClanRequest(com.randioo.shizurongyao_server.protocol.Clan.ClanShowAllClanRequest value) {
        if (result.hasClanShowAllClanRequest() &&
            result.clanShowAllClanRequest_ != com.randioo.shizurongyao_server.protocol.Clan.ClanShowAllClanRequest.getDefaultInstance()) {
          result.clanShowAllClanRequest_ =
            com.randioo.shizurongyao_server.protocol.Clan.ClanShowAllClanRequest.newBuilder(result.clanShowAllClanRequest_).mergeFrom(value).buildPartial();
        } else {
          result.clanShowAllClanRequest_ = value;
        }
        result.hasClanShowAllClanRequest = true;
        return this;
      }
      public Builder clearClanShowAllClanRequest() {
        result.hasClanShowAllClanRequest = false;
        result.clanShowAllClanRequest_ = com.randioo.shizurongyao_server.protocol.Clan.ClanShowAllClanRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.GmCmdRequest GmCmdRequest = 31;
      public boolean hasGmCmdRequest() {
        return result.hasGmCmdRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Gm.GmCmdRequest getGmCmdRequest() {
        return result.getGmCmdRequest();
      }
      public Builder setGmCmdRequest(com.randioo.shizurongyao_server.protocol.Gm.GmCmdRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGmCmdRequest = true;
        result.gmCmdRequest_ = value;
        return this;
      }
      public Builder setGmCmdRequest(com.randioo.shizurongyao_server.protocol.Gm.GmCmdRequest.Builder builderForValue) {
        result.hasGmCmdRequest = true;
        result.gmCmdRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeGmCmdRequest(com.randioo.shizurongyao_server.protocol.Gm.GmCmdRequest value) {
        if (result.hasGmCmdRequest() &&
            result.gmCmdRequest_ != com.randioo.shizurongyao_server.protocol.Gm.GmCmdRequest.getDefaultInstance()) {
          result.gmCmdRequest_ =
            com.randioo.shizurongyao_server.protocol.Gm.GmCmdRequest.newBuilder(result.gmCmdRequest_).mergeFrom(value).buildPartial();
        } else {
          result.gmCmdRequest_ = value;
        }
        result.hasGmCmdRequest = true;
        return this;
      }
      public Builder clearGmCmdRequest() {
        result.hasGmCmdRequest = false;
        result.gmCmdRequest_ = com.randioo.shizurongyao_server.protocol.Gm.GmCmdRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.RankShowClanPointRankRequest RankShowClanPointRankRequest = 32;
      public boolean hasRankShowClanPointRankRequest() {
        return result.hasRankShowClanPointRankRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Rank.RankShowClanPointRankRequest getRankShowClanPointRankRequest() {
        return result.getRankShowClanPointRankRequest();
      }
      public Builder setRankShowClanPointRankRequest(com.randioo.shizurongyao_server.protocol.Rank.RankShowClanPointRankRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRankShowClanPointRankRequest = true;
        result.rankShowClanPointRankRequest_ = value;
        return this;
      }
      public Builder setRankShowClanPointRankRequest(com.randioo.shizurongyao_server.protocol.Rank.RankShowClanPointRankRequest.Builder builderForValue) {
        result.hasRankShowClanPointRankRequest = true;
        result.rankShowClanPointRankRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeRankShowClanPointRankRequest(com.randioo.shizurongyao_server.protocol.Rank.RankShowClanPointRankRequest value) {
        if (result.hasRankShowClanPointRankRequest() &&
            result.rankShowClanPointRankRequest_ != com.randioo.shizurongyao_server.protocol.Rank.RankShowClanPointRankRequest.getDefaultInstance()) {
          result.rankShowClanPointRankRequest_ =
            com.randioo.shizurongyao_server.protocol.Rank.RankShowClanPointRankRequest.newBuilder(result.rankShowClanPointRankRequest_).mergeFrom(value).buildPartial();
        } else {
          result.rankShowClanPointRankRequest_ = value;
        }
        result.hasRankShowClanPointRankRequest = true;
        return this;
      }
      public Builder clearRankShowClanPointRankRequest() {
        result.hasRankShowClanPointRankRequest = false;
        result.rankShowClanPointRankRequest_ = com.randioo.shizurongyao_server.protocol.Rank.RankShowClanPointRankRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.GetRaceRoleNumRequest GetRaceRoleNumRequest = 33;
      public boolean hasGetRaceRoleNumRequest() {
        return result.hasGetRaceRoleNumRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Race.GetRaceRoleNumRequest getGetRaceRoleNumRequest() {
        return result.getGetRaceRoleNumRequest();
      }
      public Builder setGetRaceRoleNumRequest(com.randioo.shizurongyao_server.protocol.Race.GetRaceRoleNumRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGetRaceRoleNumRequest = true;
        result.getRaceRoleNumRequest_ = value;
        return this;
      }
      public Builder setGetRaceRoleNumRequest(com.randioo.shizurongyao_server.protocol.Race.GetRaceRoleNumRequest.Builder builderForValue) {
        result.hasGetRaceRoleNumRequest = true;
        result.getRaceRoleNumRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeGetRaceRoleNumRequest(com.randioo.shizurongyao_server.protocol.Race.GetRaceRoleNumRequest value) {
        if (result.hasGetRaceRoleNumRequest() &&
            result.getRaceRoleNumRequest_ != com.randioo.shizurongyao_server.protocol.Race.GetRaceRoleNumRequest.getDefaultInstance()) {
          result.getRaceRoleNumRequest_ =
            com.randioo.shizurongyao_server.protocol.Race.GetRaceRoleNumRequest.newBuilder(result.getRaceRoleNumRequest_).mergeFrom(value).buildPartial();
        } else {
          result.getRaceRoleNumRequest_ = value;
        }
        result.hasGetRaceRoleNumRequest = true;
        return this;
      }
      public Builder clearGetRaceRoleNumRequest() {
        result.hasGetRaceRoleNumRequest = false;
        result.getRaceRoleNumRequest_ = com.randioo.shizurongyao_server.protocol.Race.GetRaceRoleNumRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.RaceSignUpRequest RaceSignUpRequest = 34;
      public boolean hasRaceSignUpRequest() {
        return result.hasRaceSignUpRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Race.RaceSignUpRequest getRaceSignUpRequest() {
        return result.getRaceSignUpRequest();
      }
      public Builder setRaceSignUpRequest(com.randioo.shizurongyao_server.protocol.Race.RaceSignUpRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRaceSignUpRequest = true;
        result.raceSignUpRequest_ = value;
        return this;
      }
      public Builder setRaceSignUpRequest(com.randioo.shizurongyao_server.protocol.Race.RaceSignUpRequest.Builder builderForValue) {
        result.hasRaceSignUpRequest = true;
        result.raceSignUpRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeRaceSignUpRequest(com.randioo.shizurongyao_server.protocol.Race.RaceSignUpRequest value) {
        if (result.hasRaceSignUpRequest() &&
            result.raceSignUpRequest_ != com.randioo.shizurongyao_server.protocol.Race.RaceSignUpRequest.getDefaultInstance()) {
          result.raceSignUpRequest_ =
            com.randioo.shizurongyao_server.protocol.Race.RaceSignUpRequest.newBuilder(result.raceSignUpRequest_).mergeFrom(value).buildPartial();
        } else {
          result.raceSignUpRequest_ = value;
        }
        result.hasRaceSignUpRequest = true;
        return this;
      }
      public Builder clearRaceSignUpRequest() {
        result.hasRaceSignUpRequest = false;
        result.raceSignUpRequest_ = com.randioo.shizurongyao_server.protocol.Race.RaceSignUpRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.RaceCancelSignUpRequest RaceCancelSignUpRequest = 35;
      public boolean hasRaceCancelSignUpRequest() {
        return result.hasRaceCancelSignUpRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Race.RaceCancelSignUpRequest getRaceCancelSignUpRequest() {
        return result.getRaceCancelSignUpRequest();
      }
      public Builder setRaceCancelSignUpRequest(com.randioo.shizurongyao_server.protocol.Race.RaceCancelSignUpRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRaceCancelSignUpRequest = true;
        result.raceCancelSignUpRequest_ = value;
        return this;
      }
      public Builder setRaceCancelSignUpRequest(com.randioo.shizurongyao_server.protocol.Race.RaceCancelSignUpRequest.Builder builderForValue) {
        result.hasRaceCancelSignUpRequest = true;
        result.raceCancelSignUpRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeRaceCancelSignUpRequest(com.randioo.shizurongyao_server.protocol.Race.RaceCancelSignUpRequest value) {
        if (result.hasRaceCancelSignUpRequest() &&
            result.raceCancelSignUpRequest_ != com.randioo.shizurongyao_server.protocol.Race.RaceCancelSignUpRequest.getDefaultInstance()) {
          result.raceCancelSignUpRequest_ =
            com.randioo.shizurongyao_server.protocol.Race.RaceCancelSignUpRequest.newBuilder(result.raceCancelSignUpRequest_).mergeFrom(value).buildPartial();
        } else {
          result.raceCancelSignUpRequest_ = value;
        }
        result.hasRaceCancelSignUpRequest = true;
        return this;
      }
      public Builder clearRaceCancelSignUpRequest() {
        result.hasRaceCancelSignUpRequest = false;
        result.raceCancelSignUpRequest_ = com.randioo.shizurongyao_server.protocol.Race.RaceCancelSignUpRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.shizurongyao_server.protocol.RaceDescRequest RaceDescRequest = 36;
      public boolean hasRaceDescRequest() {
        return result.hasRaceDescRequest();
      }
      public com.randioo.shizurongyao_server.protocol.Race.RaceDescRequest getRaceDescRequest() {
        return result.getRaceDescRequest();
      }
      public Builder setRaceDescRequest(com.randioo.shizurongyao_server.protocol.Race.RaceDescRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRaceDescRequest = true;
        result.raceDescRequest_ = value;
        return this;
      }
      public Builder setRaceDescRequest(com.randioo.shizurongyao_server.protocol.Race.RaceDescRequest.Builder builderForValue) {
        result.hasRaceDescRequest = true;
        result.raceDescRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeRaceDescRequest(com.randioo.shizurongyao_server.protocol.Race.RaceDescRequest value) {
        if (result.hasRaceDescRequest() &&
            result.raceDescRequest_ != com.randioo.shizurongyao_server.protocol.Race.RaceDescRequest.getDefaultInstance()) {
          result.raceDescRequest_ =
            com.randioo.shizurongyao_server.protocol.Race.RaceDescRequest.newBuilder(result.raceDescRequest_).mergeFrom(value).buildPartial();
        } else {
          result.raceDescRequest_ = value;
        }
        result.hasRaceDescRequest = true;
        return this;
      }
      public Builder clearRaceDescRequest() {
        result.hasRaceDescRequest = false;
        result.raceDescRequest_ = com.randioo.shizurongyao_server.protocol.Race.RaceDescRequest.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.shizurongyao_server.protocol.CSMessage)
    }
    
    static {
      defaultInstance = new CSMessage(true);
      com.randioo.shizurongyao_server.protocol.ClientMessage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.shizurongyao_server.protocol.CSMessage)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_shizurongyao_server_protocol_CSMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_shizurongyao_server_protocol_CSMessage_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023ClientMessage.proto\022(com.randioo.shizu" +
      "rongyao_server.protocol\032\013Login.proto\032\013Ma" +
      "tch.proto\032\013Fight.proto\032\rPillage.proto\032\nC" +
      "ard.proto\032\nPing.proto\032\014Market.proto\032\tWar" +
      ".proto\032\nRole.proto\032\nClan.proto\032\010Gm.proto" +
      "\032\nRank.proto\032\nRace.proto\"\273\033\n\tCSMessage\022d" +
      "\n\030LoginCheckAccountRequest\030\001 \001(\0132B.com.r" +
      "andioo.shizurongyao_server.protocol.Logi" +
      "nCheckAccountRequest\022`\n\026LoginCreateRoleR" +
      "equest\030\002 \001(\0132@.com.randioo.shizurongyao_",
      "server.protocol.LoginCreateRoleRequest\022b" +
      "\n\027LoginGetRoleDataRequest\030\003 \001(\0132A.com.ra" +
      "ndioo.shizurongyao_server.protocol.Login" +
      "GetRoleDataRequest\022b\n\027FightClientReadyRe" +
      "quest\030\004 \001(\0132A.com.randioo.shizurongyao_s" +
      "erver.protocol.FightClientReadyRequest\022`" +
      "\n\026FightGameActionRequest\030\005 \001(\0132@.com.ran" +
      "dioo.shizurongyao_server.protocol.FightG" +
      "ameActionRequest\022\\\n\024FightGameOverRequest" +
      "\030\006 \001(\0132>.com.randioo.shizurongyao_server",
      ".protocol.FightGameOverRequest\022d\n\030FightG" +
      "etGameAwardRequest\030\007 \001(\0132B.com.randioo.s" +
      "hizurongyao_server.protocol.FightGetGame" +
      "AwardRequest\022^\n\025FightCountDownRequest\030\010 " +
      "\001(\0132?.com.randioo.shizurongyao_server.pr" +
      "otocol.FightCountDownRequest\022t\n FightLoa" +
      "dResourceProgressRequest\030\t \001(\0132J.com.ran" +
      "dioo.shizurongyao_server.protocol.FightL" +
      "oadResourceProgressRequest\022X\n\022PillageRol" +
      "eRequest\030\n \001(\0132<.com.randioo.shizurongya",
      "o_server.protocol.PillageRoleRequest\022\\\n\024" +
      "PillageCancelRequest\030\013 \001(\0132>.com.randioo" +
      ".shizurongyao_server.protocol.PillageCan" +
      "celRequest\022X\n\022PillageShowRequest\030\014 \001(\0132<" +
      ".com.randioo.shizurongyao_server.protoco" +
      "l.PillageShowRequest\022r\n\037PillageCompetiti" +
      "onNoticeRequest\030\r \001(\0132I.com.randioo.shiz" +
      "urongyao_server.protocol.PillageCompetit" +
      "ionNoticeRequest\022`\n\026PillagePracticeReque" +
      "st\030\016 \001(\0132@.com.randioo.shizurongyao_serv",
      "er.protocol.PillagePracticeRequest\022b\n\027Ca" +
      "rdGetCardsInfoRequest\030\017 \001(\0132A.com.randio" +
      "o.shizurongyao_server.protocol.CardGetCa" +
      "rdsInfoRequest\022b\n\027CardEditCardListReques" +
      "t\030\020 \001(\0132A.com.randioo.shizurongyao_serve" +
      "r.protocol.CardEditCardListRequest\022R\n\017Ca" +
      "rdLvUpRequest\030\021 \001(\01329.com.randioo.shizur" +
      "ongyao_server.protocol.CardLvUpRequest\022l" +
      "\n\034CardChooseUseCardListRequest\030\022 \001(\0132F.c" +
      "om.randioo.shizurongyao_server.protocol.",
      "CardChooseUseCardListRequest\022f\n\031CardChan" +
      "geMainCardRequest\030\023 \001(\0132C.com.randioo.sh" +
      "izurongyao_server.protocol.CardChangeMai" +
      "nCardRequest\022J\n\013PingRequest\030\024 \001(\01325.com." +
      "randioo.shizurongyao_server.protocol.Pin" +
      "gRequest\022h\n\032MarketBuyMarketItemRequest\030\025" +
      " \001(\0132D.com.randioo.shizurongyao_server.p" +
      "rotocol.MarketBuyMarketItemRequest\022p\n\036Ma" +
      "rketArtificialRefreshRequest\030\026 \001(\0132H.com" +
      ".randioo.shizurongyao_server.protocol.Ma",
      "rketArtificialRefreshRequest\022V\n\021MarketSh" +
      "owRequest\030\027 \001(\0132;.com.randioo.shizurongy" +
      "ao_server.protocol.MarketShowRequest\022d\n\030" +
      "WarShowWarChapterRequest\030\030 \001(\0132B.com.ran" +
      "dioo.shizurongyao_server.protocol.WarSho" +
      "wWarChapterRequest\022`\n\026WarShowWarBuildReq" +
      "uest\030\031 \001(\0132@.com.randioo.shizurongyao_se" +
      "rver.protocol.WarShowWarBuildRequest\022R\n\017" +
      "WarMarchRequest\030\032 \001(\01329.com.randioo.shiz" +
      "urongyao_server.protocol.WarMarchRequest",
      "\022f\n\031WarGetChapterAwardRequest\030\033 \001(\0132C.co" +
      "m.randioo.shizurongyao_server.protocol.W" +
      "arGetChapterAwardRequest\022^\n\025RoleInfoSele" +
      "ctRequest\030\034 \001(\0132?.com.randioo.shizurongy" +
      "ao_server.protocol.RoleInfoSelectRequest" +
      "\022V\n\021RoleRenameRequest\030\035 \001(\0132;.com.randio" +
      "o.shizurongyao_server.protocol.RoleRenam" +
      "eRequest\022`\n\026ClanShowAllClanRequest\030\036 \001(\013" +
      "2@.com.randioo.shizurongyao_server.proto" +
      "col.ClanShowAllClanRequest\022L\n\014GmCmdReque",
      "st\030\037 \001(\01326.com.randioo.shizurongyao_serv" +
      "er.protocol.GmCmdRequest\022l\n\034RankShowClan" +
      "PointRankRequest\030  \001(\0132F.com.randioo.shi" +
      "zurongyao_server.protocol.RankShowClanPo" +
      "intRankRequest\022^\n\025GetRaceRoleNumRequest\030" +
      "! \001(\0132?.com.randioo.shizurongyao_server." +
      "protocol.GetRaceRoleNumRequest\022V\n\021RaceSi" +
      "gnUpRequest\030\" \001(\0132;.com.randioo.shizuron" +
      "gyao_server.protocol.RaceSignUpRequest\022b" +
      "\n\027RaceCancelSignUpRequest\030# \001(\0132A.com.ra",
      "ndioo.shizurongyao_server.protocol.RaceC" +
      "ancelSignUpRequest\022R\n\017RaceDescRequest\030$ " +
      "\001(\01329.com.randioo.shizurongyao_server.pr" +
      "otocol.RaceDescRequest"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_randioo_shizurongyao_server_protocol_CSMessage_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_randioo_shizurongyao_server_protocol_CSMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_shizurongyao_server_protocol_CSMessage_descriptor,
              new java.lang.String[] { "LoginCheckAccountRequest", "LoginCreateRoleRequest", "LoginGetRoleDataRequest", "FightClientReadyRequest", "FightGameActionRequest", "FightGameOverRequest", "FightGetGameAwardRequest", "FightCountDownRequest", "FightLoadResourceProgressRequest", "PillageRoleRequest", "PillageCancelRequest", "PillageShowRequest", "PillageCompetitionNoticeRequest", "PillagePracticeRequest", "CardGetCardsInfoRequest", "CardEditCardListRequest", "CardLvUpRequest", "CardChooseUseCardListRequest", "CardChangeMainCardRequest", "PingRequest", "MarketBuyMarketItemRequest", "MarketArtificialRefreshRequest", "MarketShowRequest", "WarShowWarChapterRequest", "WarShowWarBuildRequest", "WarMarchRequest", "WarGetChapterAwardRequest", "RoleInfoSelectRequest", "RoleRenameRequest", "ClanShowAllClanRequest", "GmCmdRequest", "RankShowClanPointRankRequest", "GetRaceRoleNumRequest", "RaceSignUpRequest", "RaceCancelSignUpRequest", "RaceDescRequest", },
              com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage.class,
              com.randioo.shizurongyao_server.protocol.ClientMessage.CSMessage.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.randioo.shizurongyao_server.protocol.Login.getDescriptor(),
          com.randioo.shizurongyao_server.protocol.Match.getDescriptor(),
          com.randioo.shizurongyao_server.protocol.Fight.getDescriptor(),
          com.randioo.shizurongyao_server.protocol.Pillage.getDescriptor(),
          com.randioo.shizurongyao_server.protocol.Card.getDescriptor(),
          com.randioo.shizurongyao_server.protocol.Ping.getDescriptor(),
          com.randioo.shizurongyao_server.protocol.Market.getDescriptor(),
          com.randioo.shizurongyao_server.protocol.War.getDescriptor(),
          com.randioo.shizurongyao_server.protocol.Role.getDescriptor(),
          com.randioo.shizurongyao_server.protocol.Clan.getDescriptor(),
          com.randioo.shizurongyao_server.protocol.Gm.getDescriptor(),
          com.randioo.shizurongyao_server.protocol.Rank.getDescriptor(),
          com.randioo.shizurongyao_server.protocol.Race.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
